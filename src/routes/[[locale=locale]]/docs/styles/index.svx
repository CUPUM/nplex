---
title: Styles
---

Nplex's **styles** are twofold. Some establish the app's base look and feel. Others provide global,
reusable classes without the DX overhead of componentization. The latter strive to minimize the
content of component-level `<style>` tags all while facilitating the use of consistent designs
across the app. They encompass most primitive styles whereas more complex or use-specific cases are
handled through components. This approach aims to help navigate Svelte's composition limitations in
regards to:

- Lack of or problematic bindings (`use:action`, `bind:group`, etc.) when using components;
- Footgun and poor DX inherent to using `:global()` selector when wishing to share classes across
  components;
- Typing and prop handling complications arising when trying to scaffold components that can handle
  the use of varying HTML element(s) suited for your case;

In many cases, you can prepare case-specific helper components to streamline the use of these styles
or to include complementary features such as transitions, crossfades, context-based automations, and
more (see [Components](/docs/components) for some examples). Though, these styles being provided
globally also enables inline uses.
