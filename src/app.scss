@import 'preflight.scss';

:root {
	/* App fonts. */
	--font-main: 'Outfit', sans-serif;
	--font-misc: 'Fraunces', serif;
	/* --font-misc: 'Newsreader', serif; */
	--font-mono: 'Martian Mono', monospace;
	/* Color palettes. */
	--color-neutral-50: hsl(30, 10%, 97%);
	--color-neutral-100: hsl(30, 9%, 92%);
	--color-neutral-200: hsl(30, 8%, 88%);
	--color-neutral-300: hsl(34, 7%, 81%);
	--color-neutral-400: hsl(34, 6%, 72%);
	--color-neutral-500: hsl(35, 5%, 45%);
	--color-neutral-600: hsl(33, 6%, 24%);
	--color-neutral-700: hsl(30, 7%, 17%);
	--color-neutral-800: hsl(32, 8%, 13%);
	--color-neutral-900: hsl(34, 9%, 10%);
	--color-neutral-950: hsl(30, 10%, 7%);
	--color-primary-50: hsl(162, 81%, 96%);
	--color-primary-100: hsl(161, 80%, 90%);
	--color-primary-200: hsl(160, 76%, 80%);
	--color-primary-300: hsl(159, 72%, 67%);
	--color-primary-400: hsl(158, 65%, 52%);
	--color-primary-500: hsl(157, 88%, 39%);
	--color-primary-600: hsl(156, 95%, 30%);
	--color-primary-700: hsl(155, 95%, 23%);
	--color-primary-800: hsl(154, 93%, 17%);
	--color-primary-900: hsl(153, 91%, 12%);
	--color-primary-950: hsl(152, 91%, 8%);
	--color-secondary-50: hsl(39, 75%, 90%);
	--color-secondary-100: hsl(39, 74%, 84%);
	--color-secondary-200: hsl(38, 73%, 77%);
	--color-secondary-300: hsl(37, 72%, 70%);
	--color-secondary-400: hsl(37, 73%, 62%);
	--color-secondary-500: hsl(38, 70%, 54%);
	--color-secondary-600: hsl(39, 69%, 45%);
	--color-secondary-700: hsl(38, 68%, 39%);
	--color-secondary-800: hsl(37, 67%, 30%);
	--color-secondary-900: hsl(36, 66%, 21%);
	--color-secondary-950: hsl(35, 65%, 12%);
	--color-success-50: hsl(89, 86%, 88%);
	--color-success-100: hsl(89, 84%, 83%);
	--color-success-200: hsl(89, 72%, 75%);
	--color-success-300: hsl(89, 68%, 64%);
	--color-success-400: hsl(89, 68%, 52%);
	--color-success-500: hsl(89, 75%, 43%);
	--color-success-600: hsl(89, 78%, 35%);
	--color-success-700: hsl(89, 79%, 30%);
	--color-success-800: hsl(89, 80%, 24%);
	--color-success-900: hsl(89, 83%, 18%);
	--color-success-950: hsl(89, 82%, 12%);
	--color-error-50: hsl(8, 84%, 84%);
	--color-error-100: hsl(8, 79%, 78%);
	--color-error-200: hsl(8, 78%, 69%);
	--color-error-300: hsl(8, 78%, 63%);
	--color-error-400: hsl(8, 79%, 58%);
	--color-error-500: hsl(8, 80%, 54%);
	--color-error-600: hsl(8, 80%, 50%);
	--color-error-700: hsl(8, 82%, 44%);
	--color-error-800: hsl(8, 84%, 37%);
	--color-error-900: hsl(8, 86%, 29%);
	--color-error-950: hsl(8, 89%, 20%);
	/* Text and misc absolute sizes. */
	--size-6xs: 0.125rem;
	--size-5xs: 0.25rem;
	--size-4xs: 0.35rem;
	--size-3xs: 0.5rem;
	--size-2xs: 0.65rem;
	--size-xs: 0.75rem;
	--size-sm: 0.875rem;
	--size-md: 1rem;
	--size-lg: 1.125rem;
	--size-xl: 1.35rem;
	--size-2xl: 1.75rem;
	--size-3xl: 2.5rem;
	--size-4xl: 3.5rem;
	--size-5xl: 5rem;
	--size-6xl: 7rem;
	--size-7xl: 10rem;
	--size-8xl: 15rem;
	/* Rounded corners. */
	--radius-2xs: 6px;
	--radius-xs: 8px;
	--radius-sm: 12px;
	--radius-md: 16px;
	--radius-lg: 21px;
	--radius-xl: 28px;
	--radius-2xl: 36px;
	--radius-3xl: 48px;
	--radius-full: 999px;
	/* Content sizes. */
	--width-main: 1200px;
	--width-md: 760px;
	--width-center: 420px;
	/* Easings */
	--ease-expo: cubic-bezier(0.87, 0, 0.13, 1);
	--ease-in-expo: cubic-bezier(0.7, 0, 0.84, 0);
	--ease-out-expo: cubic-bezier(0.16, 1, 0.3, 1);
	/* Shadows (based on tailwind) */
	--shadow-xs: 0 1px 2px -1px rgb(0, 0, 0, 0.05);
	--shadow-sm: 0 3px 3px -2px rgb(0, 0, 0, 0.1), 0 1px 2px -1px rgb(0, 0, 0, 0.025);
	--shadow-md: 0 5px 8px -3px rgb(0, 0, 0, 0.1), 0 2px 4px -2px rgb(0, 0, 0, 0.05);
	--shadow-lg: 0 10px 16px -4px rgb(0, 0, 0, 0.1), 0 4px 6px -4px rgb(0, 0, 0, 0.1);
	--shadow-xl: 0 16px 24px -10px rgb(0, 0, 0, 0.1), 0 8px 10px -6px rgb(0, 0, 0, 0.1);
	--shadow-2xl: 0 24px 48px -16px rgb(0, 0, 0, 0.25);
	/* Effects (transitions and transforms) */
	--fx-scale: 0.96;
	--fx-duration-out: 0.15s;
	/* Base values for io elements and others */
	--base-size: 3.5em;
	--base-padding: 1.25em;
	--base-radius: var(--radius-md);
	--base-border-size: 1.25px;
	--base-inset: 6px;
	/* Component-specific */
	--navbar-height: 72px;
	--dashboard-sidebar-width: 175px;
	/* Root style */
	position: relative;
	font-size: 100%;
	font-family: var(--font-main);
	overflow-x: hidden;
	accent-color: var(--color-primary-500);
	color: var(--color-neutral-700);
	background-color: var(--color-neutral-100);
	transition: all 0.1s ease-out;
	&[data-mode='dark'] {
		color: var(--color-neutral-300);
		background-color: var(--color-neutral-900);
	}
}

body {
	position: relative;
	display: flex;
	flex-direction: column;
	min-height: 100svh;
}

@mixin focus-outline {
	outline: 3px solid var(--color-primary-800);
	@include global-dark {
		outline: 3px solid var(--color-primary-500);
	}
}

/*
Reset default outlines
*/
*:focus-visible {
	@include focus-outline;
}

/*
Animations
*/

@keyframes press {
	0% {
		transform: scale(1);
	}
	25% {
		transform: scale(0.96);
	}
	100% {
		transform: scale(1);
	}
}

@keyframes gradient-pulse {
	0% {
		background-position: 0% 0%;
	}
	100% {
		background-position: -135% 0%;
	}
}

/*
Headings
*/
.heading {
	margin-block: 1em;
	color: var(--color-neutral-800);
	font-optical-sizing: auto;
	@include global-dark {
		color: var(--color-neutral-200);
	}
	/*
	Extra large heading
	*/
	&.xl {
		line-height: 1.1;
		font-weight: 532;
		font-size: var(--size-4xl);
	}

	/*
	Large heading
	*/
	&.lg {
		line-height: 1.15;
		font-weight: 550;
		font-size: var(--size-3xl);
	}

	/*
	Medium heading
	*/
	&.md {
		line-height: 1.2;
		font-weight: 625;
		font-size: var(--size-2xl);
	}

	/*
	Small heading
	*/
	&.sm {
		line-height: 1.275;
		font-weight: 632;
		font-size: var(--size-xl);
	}

	/*
	Extra small heading
	*/
	&.xs {
		line-height: 1.35;
		font-weight: 632;
		font-size: var(--size-lg);
	}
}

/*
Prose (text_
*/
.prose {
	color: var(--color-neutral-700);
	font-optical-sizing: auto;
	margin-block: 1.25em;
	width: 65ch;

	&.dim {
		color: var(--color-neutral-600);
		@include global-dark {
			color: var(--color-neutral-400);
		}
	}

	&.dimmer {
		color: var(--color-neutral-500);
		@include global-dark {
			color: var(--color-neutral-500);
		}
	}

	@include global-dark {
		color: var(--color-neutral-300);
	}

	/*
	Extra large text
	*/
	&.xl {
		font-size: var(--size-xl);
		font-weight: 300;
		line-height: 1.3em;
	}

	/*
	Large text
	*/
	&.lg {
		font-size: var(--size-lg);
		font-weight: 325;
		line-height: 1.35em;
	}

	/*
	Regular text
	*/
	&.md {
		font-size: var(--size-md);
		font-weight: 350;
		line-height: 1.4em;
	}

	/*
	Small text
	*/
	&.sm {
		font-size: var(--size-sm);
		font-weight: 360;
		line-height: 1.45em;
	}

	/*
	Extra small text
	*/
	&.xs {
		font-size: var(--size-xs);
		font-weight: 375;
		line-height: 1.5em;
	}
}

/*
Normal emphasis
*/
em {
}

/*
Strong emphasis
*/
strong {
}

.center {
	text-align: center;
}

.right {
	text-align: right;
}

/*
Button styles

Variants:
- default (no variant class)
- outlined
- cta
- ghost
- link
*/
.button {
	--button-duration-out: 0.25s;
	line-height: 1.2;
	position: relative;
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: flex-start;
	gap: 0.75em;
	font-weight: 450;
	padding: 0 var(--base-padding);
	height: var(--base-size);
	border-radius: var(--base-radius);
	white-space: nowrap;
	text-overflow: ellipsis;
	transition: all var(--fx-duration-out) ease-out;
	&:hover,
	&:focus-visible {
		transition: all 0s;
		.button-icon {
			opacity: 1;
			transform: var(--fx-scale);
		}
	}
	&:active {
		animation: press 0.2s ease-out;
		.button-icon {
			transform: scale(1.05);
		}
	}
	&[data-disabled],
	&:disabled {
		transform: scale(var(--fx-scale));
		pointer-events: none;
		&:not([data-loading]) {
			opacity: 0.35;
			color: var(--color-neutral-800);
			// background-color: color-mix(in srgb, var(--color-neutral-500) 50%, transparent);
			@include dark {
				color: var(--color-neutral-200);
			}
		}
	}
	&[data-loading] {
		pointer-events: none;
		color: color-mix(in srgb, var(--color-neutral-500) 25%, transparent);
	}
	&[data-current] {
		pointer-events: none;
		.button-icon {
			opacity: 1;
		}
	}

	&.center {
		justify-content: center;
	}

	&.right {
		justify-content: right;
	}

	&.square,
	&.round {
		justify-content: center;
		padding-inline: 0;
		aspect-ratio: 1;
	}

	&.round {
		border-radius: var(--radius-full);
	}

	/*
	Default variant
	*/
	&:not(.outlined):not(.ghost):not(.cta):not(.link):not(.danger) {
		color: var(--color-neutral-800);
		background-color: color-mix(in srgb, var(--color-neutral-500) 25%, transparent);
		@include global-dark {
			color: var(--color-neutral-200);
		}
		&:hover,
		&:focus-visible {
			color: var(--color-neutral-950);
			background-color: color-mix(in srgb, var(--color-neutral-400) 25%, transparent);
			@include global-dark {
				color: var(--color-neutral-50);
				background-color: color-mix(in srgb, var(--color-neutral-600) 25%, transparent);
			}
		}
	}

	/*
	Outlined variant
	*/
	&.outlined {
		color: var(--color-neutral-800);
		border: var(--base-border-size) solid
			color-mix(in srgb, var(--color-neutral-500) 25%, transparent);
		@include global-dark {
			color: var(--color-neutral-200);
		}
		&:hover,
		&:focus-visible {
			color: var(--color-neutral-950);
			background-color: color-mix(in srgb, var(--color-neutral-400) 25%, transparent);
			border: var(--base-border-size) solid transparent;
			@include global-dark {
				color: var(--color-neutral-50);
				background-color: color-mix(in srgb, var(--color-neutral-600) 25%, transparent);
				border: var(--base-border-size) solid transparent;
			}
		}
	}

	/*
	Ghost variant
	*/
	&.ghost {
		color: var(--color-neutral-700);
		@include global-dark {
			color: var(--color-neutral-300);
		}
		&[data-current] {
			color: var(--color-primary-500);
		}
		&:hover,
		&:focus-visible {
			color: var(--color-neutral-950);
			background-color: color-mix(in srgb, var(--color-neutral-500) 15%, transparent);
			@include global-dark {
				color: var(--color-neutral-50);
			}

			&.danger {
				color: var(--color-error-800);
				background-color: color-mix(in srgb, var(--color-error-400) 10%, transparent);
				@include global-dark {
					color: var(--color-error-200);
				}
			}
		}

		&.danger {
			color: var(--color-error-700);
			@include global-dark {
				color: var(--color-error-300);
			}
		}

		:where(.button-icon) {
			opacity: 0.35;
		}
	}

	/*
	Link variant (similar to Ghost variant, but with added underline)
	*/
	&.link {
		padding: 0 calc(var(--base-padding) * 0.75);
		font-weight: 425;
		color: var(--color-neutral-800);
		text-decoration: underline;
		text-underline-offset: 0.25em;
		text-decoration-thickness: 0.125em;
		text-decoration-color: transparent;
		text-decoration-skip-ink: none;
		text-decoration-line: underline;
		@include global-dark {
			color: var(--color-neutral-200);
		}
		&:hover,
		&:focus {
			color: var(--color-primary-600);
			text-decoration-color: currentColor;
			text-underline-offset: 0.5em;
			@include global-dark {
				color: var(--color-primary-400);
			}
		}
	}

	/*
	Call to action variant
	*/
	&.cta {
		color: var(--color-neutral-100);
		background-color: var(--color-primary-950);
		@include global-dark {
			color: var(--color-neutral-800);
			background-color: var(--color-primary-500);
		}
		&:hover,
		&:focus-visible {
			color: var(--color-primary-50);
			background-color: var(--color-primary-800);
			@include global-dark {
				color: var(--color-primary-900);
				background-color: var(--color-primary-400);
			}
		}
		&[data-loading] {
			color: color-mix(in srgb, var(--color-neutral-500) 50%, transparent);
			background-color: var(--color-neutral-900);
			@include global-dark {
				background-color: var(--color-neutral-100);
			}
		}
	}
}

/*
Button icon
*/
.button-icon {
	width: 1.25em;
	margin-block: -50%;
	stroke-width: 2;
	stroke-linecap: square;
	stroke-linejoin: round;
	opacity: 0.5;
	transform: scale(1);
	flex: none;
	transition:
		opacity 0.15s ease-out,
		transform 0.2s ease-out;

	.square &,
	.round & {
		opacity: 1;
	}
}

.button-group {
	&[data-orientation='horizontal'] {
	}

	&[data-orientation='vertical'] {
	}
}

/*
Wrapper for inputs with a legend
*/
.labeled-input {
	display: flex;
	flex-direction: column;
	gap: 0.5em;

	.input-label {
		display: flex;
		flex-direction: row;
		gap: 0.75em;
		align-items: center;
		font-weight: 400;
		font-size: clamp(var(--size-xs), 0.5em, var(--size-sm));
		padding-inline: 0.75em;
		color: var(--color-neutral-500);
		transition: all 0.2s var(--ease-out-expo);
		@include global-dark {
			color: var(--color-neutral-500);
		}

		&.with-hover {
			opacity: 0;
			transform: translateY(50%);
		}
	}

	&:hover,
	&:focus-within {
		.input-label {
			color: var(--color-neutral-900);
			@include global-dark {
				color: var(--color-neutral-100);
			}

			&.with-hover {
				opacity: 1;
				transform: translateY(0%);
			}
		}
	}
}

/*
Generic grouping with inset
*/
.group {
	--group-inset: var(--base-inset);
	--group-size: var(--base-size);
	--group-radius: var(--base-radius);
	padding: var(--group-inset);

	/*
	Applying inset to nested elements
	*/
	> * {
		--base-size: calc(var(--group-size) - 2 * var(--group-inset));
		--base-radius: calc(var(--group-radius) - var(--group-inset));
	}
}

/*
Input (fields)

Use either directly on a desired input element or on a wrapping fieldset, label, or other element
to which you plan to nest buttons and other elements.

Variants:
- default (no variant class)
- outlined
*/
.input {
	padding: 0 var(--base-padding);
	text-overflow: ellipsis;
	@at-root {
		textarea#{&} {
			padding: var(--base-padding);
		}
	}
}
.input-group {
	display: flex;
	flex-direction: row;
	align-items: center;
	.input {
		border-radius: inherit;
		align-self: stretch;
		flex: 1;
		background: transparent;
		outline: unset;
	}
}
.input:not(.input-group .input),
.input-group {
	border-radius: var(--base-radius);
	&:not(textarea) {
		height: var(--base-size);
	}

	/*
	Default variant
	*/
	&:not(.outlined) {
		background-color: color-mix(in srgb, var(--color-neutral-500) 10%, transparent);
		&:hover,
		&:focus-visible {
			box-shadow: 0 0 0 var(--base-border-size) rgba(0, 0, 0, 0.1);
			@include global-dark {
				box-shadow: 0 0 0 var(--base-border-size) rgba(255, 255, 255, 0.1);
			}
		}
		&:focus,
		&:has(.input:focus) {
			@include focus-outline;
			background-color: white;
			@include global-dark {
				background-color: color-mix(in srgb, var(--color-neutral-950) 25%, transparent);
			}
		}
		&[data-loading] {
			color: color-mix(in srgb, var(--color-neutral-500) 50%, transparent);
			transform: scale(0.95);
			pointer-events: none;
			transition: all var(--button-duration-out) ease-out;
		}
	}
}

.input-icon {
}
