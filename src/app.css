/* See app.html for layer ordering */

@import 'tailwindcss/preflight' layer(base);
@import 'tailwindcss/utilities' layer(utilities);

@theme {
	/* Defaults */
	--default-transition-duration: var(--transition-duration-medium);
	--default-transition-timing-function: var(--transition-timing-function-out);
	--default-border-width: var(--border-width-md);
	--default-ring-color: var(--outline-color);
	--default-ring-width: var(--outline-width-focus);

	/* Fonts */
	--font-family-main: 'Plus Jakarta Sans', sans serif;
	--font-family-accessory: 'Fraunces', serif;
	--font-family-mono: 'JetBrains Mono', monospace;

	/* Text sizes */
	--font-size-xs: 0.75rem;
	--font-size-xs--line-height: 1rem;
	--font-size-sm: 0.875rem;
	--font-size-sm--line-height: 1.25rem;
	--font-size-md: 1rem;
	--font-size-md--line-height: 1.5rem;
	--font-size-lg: 1.333rem; /* h6 */
	--font-size-lg--line-height: 2rem;
	--font-size-xl: 1.777rem; /* h5 */
	--font-size-xl--line-height: 2.5rem;
	--font-size-2xl: 2.369rem; /* h4 */
	--font-size-2xl--line-height: 3.25rem;
	--font-size-3xl: 3.157rem; /* h3 */
	--font-size-3xl--line-height: 4.25rem;
	--font-size-4xl: 4.209rem; /* h2 */
	--font-size-4xl--line-height: 5.25rem;
	--font-size-5xl: 5.61rem; /* h1 */
	--font-size-5xl--line-height: 6.25rem;

	/* Trackings */
	--letter-spacing-tighter: -0.05em;
	--letter-spacing-tight: -0.025em;
	--letter-spacing-normal: 0em;
	--letter-spacing-wide: 0.025em;
	--letter-spacing-wider: 0.05em;
	--letter-spacing-widest: 0.1em;

	/* Leadings */
	--line-height-none: 1;
	--line-height-xs: 1.25;
	--line-height-sm: 1.375;
	--line-height-md: 1.5;
	--line-height-lg: 1.625;
	--line-height-xl: 2;

	/* Font weights */
	--font-weight-thin: 350;
	--font-weight-normal: 450;
	--font-weight-semibold: 550;
	--font-weight-bold: 650;
	--font-weight-bolder: 750;

	/* Breakpoints */
	--breakpoint-sm: 40rem;
	--breakpoint-md: 64rem;
	--breakpoint-lg: 80rem;

	/* Widths */
	--width-xs: 16rem;
	--width-sm: 28rem;
	--width-md: 48rem;
	--width-lg: 64rem;
	--width-xl: 76rem;

	/* Spaces */
	--spacing-0: 0px;
	--spacing-xs: 0.5rem;
	--spacing-sm: 0.75rem;
	--spacing-md: 0.875rem;
	--spacing-lg: 2.5rem;
	--spacing-xl: 7rem;
	--spacing-gutter: var(--spacing-sm);
	--spacing-outline-focus: var(--outline-width-focus);
	--spacing-brick: 3.25em; /* Brick size */
	--spacing-brick-icon: 1.25em; /* Brick icon size */
	--spacing-brick-gutter: 1em; /* Brick padding inline */
	--spacing-nest: 0.2rem;
	--spacing-sidebar-width: 16rem;
	--spacing-navbar-height: 4.8rem; /* Define manually according to actual height. Avoids layout shifts inherent to getting value at runtime. */

	/* Radii */
	--radius-xs: 0.35rem;
	--radius-sm: 0.75rem;
	--radius-md: 1rem;
	--radius-lg: 2rem;
	--radius-xl: 3rem;
	--radius-full: 999px;
	--radius-inherit: inherit;
	--radius-brick: var(--radius-sm);
	--radius-dashboard-section: var(--radius-xl);
	--radius-card: var(--radius-sm);

	/* Effects */
	--blur-sm: 3px;
	--blur-md: 8px;
	--blur-lg: 18px;
	--blur-xl: 48px;

	/* Z indices */
	--z-index-frontmost: 999;
	--z-index-front: 500;

	/* Fades */
	--opacity-soft: 60%;
	--opacity-softer: 30%;

	/* Shadows */
	--shadow-xs: 0 1px 2px -1px rgb(0 0 0 / 0.05);
	--shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
	--shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
	--shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
	--shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
	--shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);

	/* Outlines */
	--outline-width-focus: var(--border-width-lg);
	--outline-offset-focus: 0px;

	/* Borders */
	--border-width-sm: 0.5px;
	--border-width-md: 1.5px;
	--border-width-lg: 3px;
	--border-width-input: var(--border-width-md);

	/* Strokes */
	--stroke-width-icon: 2px;

	/* Easings */
	--transition-timing-function-linear: linear;
	--transition-timing-function-in: cubic-bezier(0.64, 0, 0.78, 0);
	--transition-timing-function-out: cubic-bezier(0.22, 1, 0.36, 1);
	--transition-timing-function-in-out: cubic-bezier(0.83, 0, 0.17, 1);

	/* Durations */
	--transition-duration-xfast: 75ms;
	--transition-duration-fast: 125ms;
	--transition-duration-medium: 250ms;
	--transition-duration-slow: 500ms;
	--transition-duration-xslow: 1200ms;

	/* Animations */
	--animate-pulse: pulse var(--transition-duration-xslow) var(--transition-timing-function-in-out) infinite both;
	--animate-press: press var(--transition-duration-medium) var(--transition-timing-function-out) 1 both;

	/* Scales */
	--scale-press: 96%;

	@keyframes pulse {
		50% {
			opacity: var(--animation-opacity-pulse);
		}
	}

	@keyframes press {
		30% {
			transform: scale(var(--scale-press));
		}
		60% {
			transform: scale(calc(1 + (1 - var(--scale-press)) / 2));
		}
		100% {
			transform: scale(1);
		}
	}

	/* Base */
	--color-base-soft: hsl(34, 9%, 9%);
	--color-base: hsl(30, 9%, 92%);
	--color-base-strong: hsl(30, 10%, 96%);
	--color-contrast-soft: hsl(34, 9%, 9%);
	--color-contrast: hsl(30, 7%, 16%);
	--color-contrast-strong: hsl(34, 9%, 9%);
	/* Primary */
	--color-primary-soft: hsl(152, 90%, 32%);
	--color-primary: hsl(154, 94%, 24%);
	--color-primary-strong: hsl(156, 98%, 16%);
	--color-primary-contrast-soft: hsl(152, 90%, 32%);
	--color-primary-contrast: hsl(154, 94%, 24%);
	--color-primary-contrast-strong: hsl(156, 98%, 16%);
	/* Secondary */
	--color-secondary-soft: hsl(152, 92%, 12%);
	--color-secondary: hsl(154, 94%, 24%);
	--color-secondary-strong: hsl(152, 92%, 12%);
	--color-secondary-contrast-soft: hsl(152, 92%, 12%);
	--color-secondary-contrast: hsl(154, 94%, 24%);
	--color-secondary-contrast-strong: hsl(152, 92%, 12%);
	/* Success */
	--color-success-soft: hsl(152, 92%, 12%);
	--color-success: hsl(154, 94%, 24%);
	--color-success-strong: hsl(152, 92%, 12%);
	--color-success-contrast-soft: hsl(152, 92%, 12%);
	--color-success-contrast: hsl(154, 94%, 24%);
	--color-success-contrast-strong: hsl(152, 92%, 12%);
	/* Error */
	--color-error-soft: hsl(152, 92%, 12%);
	--color-error: hsl(154, 94%, 24%);
	--color-error-strong: hsl(152, 92%, 12%);
	--color-error-contrast-soft: hsl(152, 92%, 12%);
	--color-error-contrast: hsl(154, 94%, 24%);
	--color-error-contrast-strong: hsl(152, 92%, 12%);
	/* Input */
	--color-input-soft: color-mix(in srgb, var(--color-contrast-soft) 4%, transparent);
	--color-input: color-mix(in srgb, var(--color-contrast) 8%, transparent);
	--color-input-strong: color-mix(in srgb, var(--color-contrast-strong) 12%, transparent);
	--color-input-contrast-soft: ;
	--color-input-contrast: ;
	--color-input-contrast-strong: ;
	--color-input-border-soft: color-mix(in srgb, var(--color-contrast) 10%, transparent);
	--color-input-border: color-mix(in srgb, var(--color-contrast) 25%, transparent);
	--color-input-border-strong: color-mix(in srgb, var(--color-contrast) 40%, transparent);
	/* Overlay / tooltip */
	--color-overlay-soft: ;
	--color-overlay: ;
	--color-overlay-strong: ;
	--color-overlay-contrast-soft: ;
	--color-overlay-contrast: ;
	--color-overlay-contrast-strong: ;
	/* Selection */
	--color-selection: var(--color-primary-soft);
	--color-selection-contrast: ;
	/* Card */
	--color-card-soft: ;
	--color-card: ;
	--color-card-strong: ;
	/* Popover / dialogs */
	--color-popover-soft: ;
	--color-popover: ;
	--color-popover-strong: ;
	/* Oultine colors */
	--outline-color: var(--color-primary-soft);
	--outline-color-danger: var(--color-error-soft);
	/* Border colors */
	--border-color-soft: color-mix(in srgb, var(--color-contrast) 20%, transparent);
	--border-color: color-mix(in srgb, var(--color-contrast) 40%, transparent);
	--border-color-strong: color-mix(in srgb, var(--color-contrast) 60%, transparent);
}

[data-mode='dark'] {
	/* Add colors adjusted for dark mode */
}

:root {
	--animation-opacity-pulse: 25%;
	--ripple-color: currentColor;
	position: relative;
	/* font-variant-alternates: styleset(aalt); */
	font-size: 93.75%; /* 15px for default root of 16px */
	font-weight: var(--font-weight-normal);
	font-family: var(--font-family-main);
	color: var(--color-contrast);
	background: var(--color-base);
	overflow-x: hidden;
	accent-color: var(--color-outline);
}

:root:is([data-melt-scroll-lock]):has([data-melt-dialog-portalled] *) {
	background: black;
	transition:
		all var(--duration-fast) ease-out,
		background 0s;

	#container {
		scale: 0.96;
		border-radius: var(--radius-lg);
		/* box-shadow: 0 0 3em -1em black; */
	}
}

#container {
	overflow-x: hidden;
	background: var(--color-base);
	position: relative;
	display: flex;
	flex-direction: column;
	min-height: 100svh;
	scale: 1;
	transition:
		background var(--duration-fast) ease-out,
		scale var(--duration-slow) var(--ease-out-expo),
		border-radius var(--duration-slow) var(--ease-out-expo);
}

@layer base {
	a,
	button {
		cursor: pointer;
	}

	::selection {
		color: var(--color-over-selection);
		background: var(--color-selection);
	}

	::-moz-selection {
		color: var(--color-over-selection);
		background: var(--color-selection);
	}

	* {
		outline-style: solid;
		outline-color: transparent;
		outline-width: 0;
		outline-offset: 0;
	}

	:focus-visible {
		outline-style: solid;
		outline-color: var(--outline-color);
		outline-offset: var(--outline-offset-focus);
		outline-width: var(--outline-width-focus);
	}

	:focus-visible:is([data-danger='true'], [aria-invalid='true'], [data-error='true']) {
		outline-color: var(--outline-color-danger);
	}

	.lucide-icon {
		stroke-linejoin: round;
		stroke-linecap: round;
		width: var(--spacing-brick-icon);
		height: var(--spacing-brick-icon);
		stroke-width: var(--stroke-width-icon);
	}
}

@layer components {
	/* Big, wide variants */
	.big:is(.button, .input) {
		--spacing-brick: 4.5em;
		--spacing-brick-gutter: 1.75em;
		--spacing-brick-icon: 1.5em;
		--spacing-nest: 0.1rem;
	}

	/* Small, compact variants */
	.compact:is(.button, .input) {
		--spacing-brick: 4.5em;
		--spacing-brick-gutter: 1.75em;
		--spacing-brick-icon: 1.5em;
		--spacing-nest: 0.5rem;
	}

	/* Button
	states: (default), hover, disabled, busy, checked, open
	properties: color, background, background-inset, text-decoration, text-decoration-thickness, text-decoration-color, text-decoration-offset, border-color, border-style, border-width, icon-color, icon-opacity
	variables pattern: --button{-state}-{property}: value
	variants: (default), cta (call-to-action), bordered, ghost, link
	tunings: danger
	*/
	.button {
		position: relative;
		cursor: pointer;
		display: inline-flex;
		flex-direction: row;
		align-items: center;
		justify-content: center;
		gap: calc(var(--spacing-brick-gutter) / 2);
		font-weight: var(--font-weight-semibold);
		padding-top: 0;
		padding-bottom: 0;
		padding-left: var(--spacing-brick-gutter);
		padding-right: var(--spacing-brick-gutter);
		height: var(--spacing-brick);
		min-height: var(--spacing-brick);
		border-radius: var(--radius-brick);
		white-space: nowrap;
		text-overflow: ellipsis;
		user-select: none;
		transition:
			all var(--transition-duration-medium) var(--transition-timing-function-out),
			outline var(--transition-duration-fast);

		/* Press animation */
		&:active {
			scale: var(--scale-press);
		}

		/* Pseudos for background and border */
		&::before,
		&::after {
			content: '';
			position: absolute;
			z-index: -1;
			transition: inherit;
			border-radius: inherit;
			pointer-events: none;
			inset: 0;
		}

		/* Icon children */
		.lucide-icon,
		.spinner {
			transition: all var(--transition-duration-medium) var(--transition-timing-function-out);
			stroke-width: var(--stroke-width-icon);
			width: var(--spacing-brick-icon);
			height: var(--spacing-brick-icon);
		}

		/* Rounded */
		&:is(.rounded-full) {
			--radius-brick: var(--radius-full);
		}

		/* Square aspect */
		&:is(.aspect-square) {
			justify-content: center;
			padding-left: 0;
			padding-right: 0;
			aspect-ratio: 1;

			.lucide-icon,
			.spinner {
				opacity: 100%;
			}
		}

		/* Base */
		color: var(--button-color);
		text-decoration: var(--button-text-decoration);
		text-decoration-color: var(--button-text-decoration-color);
		text-decoration-thickness: var(--button-text-decoration-thickness);
		text-underline-offset: var(--button-text-underline-offset);
		&::before {
			background: var(--button-background);
			inset: var(--button-background-inset);
		}
		&::after {
			border-color: var(--button-border-color);
			border-style: var(--button-border-style);
			border-width: var(--button-border-width);
		}
		.lucide-icon,
		.spinner {
			opacity: var(--opacity-soft);
			stroke: var(--button-icon-color);
		}
		/* Hover */
		&:hover {
			color: var(--button-hover-color, var(--button-color));
			text-decoration: var(--button-hover-text-decoration, var(--button-text-decoration));
			text-decoration-color: var(--button-hover-text-decoration-color, var(--button-text-decoration-color));
			text-decoration-thickness: var(--button-hover-text-decoration-thickness, var(--button-text-decoration-thickness));
			text-underline-offset: var(--button-hover-text-underline-offset, var(--button-text-underline-offset));
			&::before {
				background: var(--button-hover-background, var(--button-background));
				inset: var(--button-hover-background-inset, var(--button-background-inset));
			}
			&::after {
				border-color: var(--button-hover-border-color, var(--button-border-color));
				border-style: var(--button-hover-border-style, var(--button-border-style));
				border-width: var(--button-hover-border-width, var(--button-border-width));
			}
			.lucide-icon,
			.spinner {
				stroke-width: calc(1.25 * var(--stroke-width-icon));
				opacity: 100%;
				stroke: var(--button-hover-icon-color, var(--button-icon-color));
			}
		}
		/* Disabled */
		&:disabled,
		&[aria-disabled='true'],
		&[data-disabled='true'] {
			cursor: default;
			opacity: var(--opacity-soft);
			color: var(--button-disabled-color, var(--button-color));
			text-decoration: var(--button-disabled-text-decoration, var(--button-text-decoration));
			text-decoration-color: var(--button-disabled-text-decoration-color, var(--button-text-decoration-color));
			text-decoration-thickness: var(--button-disabled-text-decoration-thickness, var(--button-text-decoration-thickness));
			text-underline-offset: var(--button-disabled-text-underline-offset, var(--button-text-underline-offset));
			&::before {
				background: var(--button-disabled-background, var(--button-background));
				inset: var(--button-disabled-background-inset, var(--button-background-inset));
			}
			&::after {
				border-color: var(--button-disabled-border-color, var(--button-border-color));
				border-style: var(--button-disabled-border-style, var(--button-border-style));
				border-width: var(--button-disabled-border-width, var(--button-border-width));
			}
			.lucide-icon,
			.spinner {
				opacity: var(--opacity-softer);
				stroke: var(--button-disabled-icon-color, var(--button-icon-color));
			}
		}
		/* Busy */
		&[aria-busy='true'] {
			color: var(--button-busy-color, var(--button-color));
			text-decoration: var(--button-busy-text-decoration, var(--button-text-decoration));
			text-decoration-color: var(--button-busy-text-decoration-color, var(--button-text-decoration-color));
			text-decoration-thickness: var(--button-busy-text-decoration-thickness, var(--button-text-decoration-thickness));
			text-underline-offset: var(--button-busy-text-underline-offset, var(--button-text-underline-offset));
			&::before {
				background: var(--button-busy-background, var(--button-background));
				inset: var(--button-busy-background-inset, var(--button-background-inset));
			}
			&::after {
				border-color: var(--button-busy-border-color, var(--button-border-color));
				border-style: var(--button-busy-border-style, var(--button-border-style));
				border-width: var(--button-busy-border-width, var(--button-border-width));
			}
			.lucide-icon,
			.spinner {
				opacity: 100%;
				stroke: var(--button-busy-icon-color, var(--button-icon-color));
			}
		}
		/* Checked */
		&:checked,
		&[aria-checked='true'],
		&[data-state='active'],
		&[data-state='checked'],
		&:has(:checked) {
			color: var(--button-checked-color, var(--button-color));
			text-decoration: var(--button-checked-text-decoration, var(--button-text-decoration));
			text-decoration-color: var(--button-checked-text-decoration-color, var(--button-text-decoration-color));
			text-decoration-thickness: var(--button-checked-text-decoration-thickness, var(--button-text-decoration-thickness));
			text-underline-offset: var(--button-checked-text-underline-offset, var(--button-text-underline-offset));
			&::before {
				background: var(--button-checked-background, var(--button-background));
				inset: var(--button-checked-background-inset, var(--button-background-inset));
			}
			&::after {
				border-color: var(--button-checked-border-color, var(--button-border-color));
				border-style: var(--button-checked-border-style, var(--button-border-style));
				border-width: var(--button-checked-border-width, var(--button-border-width));
			}
			.lucide-icon,
			.spinner {
				opacity: 100%;
				stroke: var(--button-checked-icon-color, var(--button-icon-color));
			}
		}
		/* Open */
		&[aria-expanded='true'],
		&[data-state='open'] {
			color: var(--button-open-color, var(--button-color));
			text-decoration: var(--button-open-text-decoration, var(--button-text-decoration));
			text-decoration-color: var(--button-open-text-decoration-color, var(--button-text-decoration-color));
			text-decoration-thickness: var(--button-open-text-decoration-thickness, var(--button-text-decoration-thickness));
			text-underline-offset: var(--button-open-text-underline-offset, var(--button-text-underline-offset));
			&::before {
				background: var(--button-open-background, var(--button-background));
				inset: var(--button-open-background-inset, var(--button-background-inset));
			}
			&::after {
				border-color: var(--button-open-border-color, var(--button-border-color));
				border-style: var(--button-open-border-style, var(--button-border-style));
				border-width: var(--button-open-border-width, var(--button-border-width));
			}
			.lucide-icon,
			.spinner {
				opacity: 100%;
				stroke: var(--button-open-icon-color, var(--button-icon-color));
			}
		}
	}

	/* Default */
	.button:not(.button-outlined, .button-ghost, .button-cta, .button-link) {
		--button-color: var(--color-contrast-input);
		--button-background: var(--color-input);
		--button-background-inset: 0;
		--button-text-decoration: none;
		--button-icon-color: currentColor;
		--button-border-style: none;
		--button-hover-color: var(--color-contrast-input-strong);
		--button-hover-background: var(--color-input-strong);
	}
	/* Outlined */
	.button:is(.button-outlined, .button-dashed) {
	}
	.button:is(.button-outlined) {
	}
	/* Dashed */
	.button:is(.dashed) {
	}
	/* Ghost */
	.button:is(.button-ghost) {
	}
	/* Call to action */
	.button:is(.button-cta) {
	}
	/* Link */
	.button:is(.button-link) {
	}

	/* Grouped button */

	.button-group {
	}

	/* Input */

	.input {
	}

	.input:not(.input-outlined) {
	}

	.input:is(.input-outlined) {
	}

	/* Input group */

	/* Switch */

	/* Toggle */
}
