a,
button {
	cursor: pointer;
}

select {
	appearance: none;
}

a:is([aria-disabled='true'], [data-disabled='true']) {
	pointer-events: none;
}

[type='search'] {
	&::-webkit-search-cancel-button,
	&::-webkit-search-decoration {
		appearance: none;
	}
}

* {
	outline-style: solid;
	outline-color: transparent;
	outline-width: 0;
	outline-offset: 0;
}

legend {
	float: left;
}

::selection {
	color: var(--text-color-selection);
	background: var(--background-color-selection);
}

::-moz-selection {
	color: var(--text-color-selection);
	background: var(--background-color-selection);
}

hr {
	border-top-width: var(--border-width-input);
	border-color: var(--border-color);
}

progress[value] {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	border: none;
	width: auto;
	color: var(--color-primary-dim);
	border-radius: 999px;
	background: var(--background-color-input);

	&::-webkit-progress-bar {
		border-radius: 999px;
		background: inherit;
	}

	&::-webkit-progress-value {
		border-radius: 999px;
		background: currentColor;
		transition: width var(--transition-duration-fast) ease-out;
	}

	&::-moz-progress-bar {
		border-radius: 999px;
		background: currentColor;
	}
}

:focus-visible {
	outline-style: solid;
	outline-color: var(--outline-color);
	outline-offset: var(--outline-offset-focus);
	outline-width: var(--outline-width-focus);
}

dialog {
	max-width: 100%;
	max-height: 100%;
}

:focus-visible:is([data-danger], [aria-invalid='true'], [data-error='true']) {
	--outline-color: var(--outline-color-error);
}

.lucide-icon {
	pointer-events: none; /* Else SVGs can trap or swallow mouse events */
	stroke-linejoin: round;
	stroke-linecap: round;
	width: var(--spacing-input-icon);
	height: var(--spacing-input-icon);
	stroke-width: var(--stroke-width-icon);
}

:root {
	--scroll-y: 0;
	--scroll-x: 0;
	--scroll-y-px: calc(var(--scroll-y) * 1px);
	--scroll-x-px: calc(var(--scroll-x) * 1px);
	position: relative;
	font-size: 100%;
	scroll-padding-top: var(--spacing-navbar-height);
	font-variant-ligatures: none;
	font-weight: var(--font-weight-normal);
	font-family: var(--font-family-main);
	color: var(--text-color-base);
	background: var(--background-color-base);
	overflow-x: hidden;
	accent-color: var(--outline-color);
	transition:
		all var(--transition-duration-fast) ease-out,
		background 0s var(--transition-duration-slow);
}

body {
	background: var(--background-color-base);
	position: relative;
	display: flex;
	flex-direction: column;
	min-height: 100svh;
	scale: 1;
	transform-origin: 50% calc(var(--scroll-y-px) + 50vh);
	transition:
		background var(--transition-duration-fast) ease-out,
		scale var(--transition-duration-slow) var(--transition-timing-function-out),
		border-radius var(--transition-duration-slow) var(--transition-timing-function-out);
}

::backdrop {
	opacity: 0;
}

/* Pseudo backdrop */

:root::after {
	content: '';
	position: fixed;
	inset: 0;
	z-index: var(--z-index-frontmost);
	pointer-events: none;
	user-select: none;
	opacity: 0;
	background: var(--background-color-overlay);
	transition: all var(--transition-duration-slow) var(--transition-timing-function-out);
}

/* Scroll lock and pseudo backdrop transition */

:root:has(:modal[open]:not([data-closing='true'])) {
	overflow: hidden;

	&::after {
		pointer-events: all;
		opacity: 1;
	}
}

/* Root effect on special modal */

:root:has(:modal[open]:not([data-closing='true'])[data-meta-modal]) {
	background: black;
	transition:
		all var(--transition-duration-fast) ease-out,
		background 0s;

	body {
		scale: 0.96;
		border-radius: var(--radius-lg);
	}
}
