.input:not(.input-group *),
.input-group {
	/* Public customizable props */
	--input-nesting: var(--base-nesting);
	--input-radius: var(--base-radius);

	/* Private and child props */
	--_nested-block-size: calc(var(--base-block-size) - 2 * var(--input-nesting));
	--_nested-radius: calc(var(--input-radius) - var(--input-nesting));

	/* Base */
	position: relative;
	display: inline-flex;
	flex-direction: row;
	align-items: center;
	border-radius: var(--input-radius);
	color: var(--_input-color);
	background: var(--_input-bg);
	transition:
		all var(--duration-medium) ease-out,
		outline var(--duration-fast);

	/* Single-line input and input-groups */
	&:not(textarea):not(:has(textarea)) {
		padding-block: 0;
		height: var(--base-block-size);
	}

	/* Border pseudo */
	&:is(input, textarea) {
		border-width: var(--_input-border-width);
		border-style: var(--_input-border-style);
		border-color: var(--_input-border-color);
	}
	&:not(input, textarea) {
		&::after {
			content: '';
			pointer-events: none;
			position: absolute;
			border-radius: inherit;
			inset: 0;
			border-width: var(--_input-border-width);
			border-style: var(--_input-border-style);
			border-color: var(--_input-border-color);
			transition: inherit;
		}
	}

	/* Icon children */
	& > :--icon,
	.input-icon {
		width: 1.1em;
		stroke-width: 2.25;
		stroke-linecap: square;
		stroke-linejoin: round;
		opacity: 0.5;
		transform: scale(0.95);
		flex: none;
		user-select: none;
		pointer-events: none;
		transition:
			opacity var(--duration-medium) ease-out,
			transform var(--duration-fast) ease-out;
	}

	/* States */

	/* Disabled */
	&:--disabled {
		pointer-events: none;
		color: var(--_input-disabled-color, var(--_input-color));
		background: var(--_input-disabled-bg, var(--_input-bg));

		&:is(input, textarea) {
			border-width: var(--_input-disabled-border-width, var(--_input-border-width));
			border-style: var(--_input-disabled-border-style, var(--_input-border-style));
			border-color: var(--_input-disabled-border-color, var(--_input-border-color));
		}
		&:not(input, textarea) {
			&::after {
				border-width: var(--_input-disabled-border-width, var(--_input-border-width));
				border-style: var(--_input-disabled-border-style, var(--_input-border-style));
				border-color: var(--_input-disabled-border-color, var(--_input-border-color));
			}
		}
	}

	/* Hover */
	&:hover {
		transition: all 0s;
		color: var(--_input-hover-color, var(--_input-color));
		background: var(--_input-hover-bg, var(--_input-bg));

		&:is(input, textarea) {
			border-width: var(--_input-hover-border-width, var(--_input-border-width));
			border-style: var(--_input-hover-border-style, var(--_input-border-style));
			border-color: var(--_input-hover-border-color, var(--_input-border-color));
		}
		&:not(input, textarea) {
			&::after {
				border-width: var(--_input-hover-border-width, var(--_input-border-width));
				border-style: var(--_input-hover-border-style, var(--_input-border-style));
				border-color: var(--_input-hover-border-color, var(--_input-border-color));
			}
		}

		.input-icon,
		& > :--icon {
			opacity: 1;
		}

		.input-affix {
			opacity: 0.5;
		}
	}

	/* Focus */
	&:focus,
	&:has(.input:focus) {
		outline: var(--base-focus-ring);
		color: var(--_input-focus-color, var(--_input-color));
		background: var(--_input-focus-bg, var(--_input-bg));

		&:is(input, textarea) {
			border-width: var(--_input-focus-border-width, var(--_input-border-width));
			border-style: var(--_input-focus-border-style, var(--_input-border-style));
			border-color: var(--_input-focus-border-color, var(--_input-border-color));
		}
		&:not(input, textarea) {
			&::after {
				border-width: var(--_input-focus-border-width, var(--_input-border-width));
				border-style: var(--_input-focus-border-style, var(--_input-border-style));
				border-color: var(--_input-focus-border-color, var(--_input-border-color));
			}
		}

		.input-icon {
			opacity: 0.9;
		}

		.input-affix {
			opacity: 0.75;
		}
	}

	/* Error */
	&:--error,
	:has(.input:--error) {
		outline: var(--base-error-ring);
		color: var(--_input-error-color, var(--_input-color));
		background: var(--_input-error-bg, var(--_input-bg));

		&:is(input, textarea) {
			/* border-width: var(--_input-error-border-width, var(--_input-border-width)); */
			/* border-style: var(--_input-error-border-style, var(--_input-border-style)); */
			border-color: transparent;
		}
		&:not(input, textarea) {
			&::after {
				/* border-width: var(--_input-error-border-width, var(--_input-border-width)); */
				/* border-style: var(--_input-error-border-style, var(--_input-border-style)); */
				border-color: transparent;
			}
		}
	}

	/* Open */
	&:--open {
		color: var(--_input-open-color, var(--_input-color));
		background: var(--_input-open-bg, var(--_input-bg));

		&:is(input, textarea) {
			border-width: var(--_input-open-border-width, var(--_input-border-width));
			border-style: var(--_input-open-border-style, var(--_input-border-style));
			border-color: var(--_input-open-border-color, var(--_input-border-color));
		}
		&:not(input, textarea) {
			&::after {
				border-width: var(--_input-open-border-width, var(--_input-border-width));
				border-style: var(--_input-open-border-style, var(--_input-border-style));
				border-color: var(--_input-open-border-color, var(--_input-border-color));
			}
		}
	}

	/* Loading */
	&:--loading {
		color: var(--_input-loading-color, var(--_input-color));
		background: var(--_input-loading-bg, var(--_input-bg));
	}

	/* Compositions */

	& > :not(.input, .input-affix, .input-icon) {
		--base-block-size: var(--_nested-block-size);
		--base-radius: var(--_nested-radius);
	}

	.input-peer {
		display: flex;
		gap: var(--input-nesting);
		flex-direction: row;
		margin: var(--input-nesting);
	}
	:not(:has(textarea)) {
		.input-icon + .input-peer {
			margin-left: 0;
		}
		.input + .input-peer {
			margin-left: 0;
		}
	}

	.input-affix {
		font-weight: 350;
		height: var(--base-block-size);
		display: flex;
		align-items: center;
		opacity: 0.35;
		white-space: nowrap;
		padding: 0 calc(var(--base-inline-padding) / 2);
		transition: all var(--duration-medium) ease-out;
		.input + & {
			padding-left: 0;
		}
	}

	/* Variants */

	/* Default */
	&:not(.outlined) {
		--ripple-color: var(--color-neutral-500);
		--spinner-color: var(--color-neutral-800);
		--_input-border-width: var(--base-border-width);
		--_input-border-style: solid;
		--_input-border-color: transparent;
		--_input-color: var(--color-neutral-700);
		--_input-bg: color-mix(in srgb, var(--color-neutral-500) 10%, transparent);
		--_input-hover-color: var(--color-neutral-800);
		--_input-hover-border-color: var(--base-border-color);
		--_input-error-color: var(--color-error-600);
		--_input-error-bg: color-mix(in srgb, var(--color-error-500) 10%, transparent);
		--_input-focus-color: var(--color-neutral-800);
		--_input-focus-bg: color-mix(in srgb, var(--color-neutral-100) 20%, transparent);
		--_input-loading-color: color-mix(in srgb, var(--color-neutral-500) 50%, transparent);

		:--dark & {
			--ripple-color: var(--color-neutral-400);
			--spinner-color: var(--color-neutral-200);
			--_input-color: var(--color-neutral-300);
			--_input-hover-color: var(--color-neutral-200);
			--_input-error-color: var(--color-error-400);
			--_input-focus-color: var(--color-neutral-200);
			--_input-focus-bg: color-mix(in srgb, var(--color-neutral-950) 15%, transparent);
		}
	}

	/* Outlined */
	&.outlined {
		--ripple-color: var(--color-neutral-500);
		--spinner-color: var(--color-neutral-800);
		--_input-border-width: var(--base-border-width);
		--_input-border-style: solid;
		--_input-border-color: var(--base-border-color);
		--_input-color: var(--color-neutral-700);
		--_input-bg: transparent;
		--_input-hover-color: var(--color-neutral-800);
		--_input-hover-border-color: color-mix(in srgb, var(--color-neutral-500) 50%, transparent);
		--_input-error-color: var(--color-error-600);
		--_input-error-bg: color-mix(in srgb, var(--color-error-500) 10%, transparent);
		--_input-focus-color: var(--color-neutral-800);
		--_input-focus-border-color: transparent;
		--_input-focus-bg: color-mix(in srgb, var(--color-neutral-100) 20%, transparent);
		--_input-loading-color: color-mix(in srgb, var(--color-neutral-500) 50%, transparent);

		:--dark & {
			--ripple-color: var(--color-neutral-400);
			--spinner-color: var(--color-neutral-200);
			--_input-color: var(--color-neutral-300);
			--_input-hover-color: var(--color-neutral-200);
			--_input-error-color: var(--color-error-400);
			--_input-focus-color: var(--color-neutral-200);
			--_input-focus-bg: color-mix(in srgb, var(--color-neutral-950) 15%, transparent);
		}
	}
}

.input {
	font-weight: 350;
	padding-inline: var(--base-inline-padding);
	text-overflow: ellipsis;
	min-width: var(--base-block-size);

	&:is(textarea) {
		--_input-line-height: var(--line-sparse);
		padding-block: calc(var(--base-block-size) / 2 - var(--_input-line-height) * 1em / 2);
		line-height: var(--_input-line-height);
		min-height: var(--base-block-size);
	}

	.input-peer + &,
	.input-icon + & {
		padding-left: calc(var(--base-inline-padding) - var(--input-nesting));
	}

	.input-affix + & {
		padding-left: 0;
	}

	&.select {
		cursor: pointer;
		display: flex;
		flex-direction: row;
		align-items: center;
		gap: 0.75em;

		/* Fine-tuning */

		/* Child icon (typically chevron) */
		.input-icon,
		& > :--icon {
			margin: 0;
		}

		/* States */

		/* Pointer-down */
		&:active {
			animation: var(--animation-press);
		}
	}
}

.input-group {
	/* Nested input */
	.input {
		background-color: transparent;
		align-self: stretch;
		border-radius: inherit;
		outline: none;
		flex: 1;
		width: 100%;
	}

	/* Multiline group */
	&:has(textarea) {
		flex-direction: column;
		align-items: stretch;

		.input-peer {
			justify-content: flex-end;
		}
	}

	.input-icon:last-child:not(.input .input-icon) {
		margin-right: var(--base-inline-padding);
	}
	.input-peer + .input-icon {
		margin-left: calc(var(--base-inline-padding) - var(--input-nesting));
	}
	.input-icon:first-child:not(.input .input-icon) {
		margin-left: var(--base-inline-padding);
	}
}
