.input {
	/* Public customizable props */
	--input-radius: var(--base-radius);

	/* Base */
	padding-block: 0;
	padding-inline: var(--base-inline-padding);
	text-overflow: ellipsis;

	.input-peer + &,
	.input-icon + & {
		padding-left: calc(var(--base-inline-padding) - var(--input-nesting));
	}

	.input-affix + & {
		padding-left: 0;
	}

	&.select {
		cursor: pointer;
		display: flex;
		flex-direction: row;
		align-items: center;
		gap: 0.75em;
		&:active {
			animation: var(--animation-press);
		}

		.input-icon {
			margin: 0;
		}
	}
}

textarea.input {
	padding-block: calc(var(--base-inline-padding) - 0.3em);
	line-height: 1.6em;
	min-height: var(--base-size);
}

.input-group {
	.input {
		background-color: transparent;
		align-self: stretch;
		border-radius: inherit;
		outline: none;
		flex: 1;
	}
	.input-icon:last-child:not(.input .input-icon) {
		margin-right: var(--base-inline-padding);
	}
	.input-peer + .input-icon {
		margin-left: calc(var(--base-inline-padding) - var(--input-nesting));
	}
	.input-icon:first-child:not(.input .input-icon) {
		margin-left: var(--base-inline-padding);
	}
}

.input-icon {
	flex: none;
	width: 1.1em;
	stroke-width: 2.25;
	opacity: 0.5;
	user-select: none;
	pointer-events: none;
	transition:
		opacity var(--duration-medium) ease-out,
		transform var(--duration-fast) ease-out;
}

.input:not(.input-group *),
.input-group {
	--input-nesting: var(--base-nesting);
	--input-radius: var(--base-radius);
	--_base-size: calc(var(--base-size) - 2 * var(--input-nesting));
	--_base-radius: calc(var(--input-radius) - var(--input-nesting));
	display: inline-flex;
	flex-direction: row;
	align-items: center;
	border-radius: var(--input-radius);

	&:disabled,
	&[data-disabled],
	&[aria-disabled] {
		opacity: 0.75;
		cursor: default;
		pointer-events: none;
	}

	&:has(textarea) {
		flex-direction: column;
		height: auto;
		align-items: stretch;

		.input-peer {
			justify-content: flex-end;
		}
	}

	&:not(textarea):not(:has(textarea)) {
		height: var(--base-size);
	}

	&:hover {
		.input-icon {
			opacity: 1;
		}
	}

	&:focus,
	&:has(.input:focus) {
		outline: var(--base-focus-ring);

		.input-icon {
			opacity: 0.9;
		}
	}

	.input-peer {
		--base-size: var(--_base-size);
		--base-radius: var(--_base-radius);
		display: flex;
		gap: var(--input-nesting);
		flex-direction: row;
		margin: var(--input-nesting);
	}
	:not(:has(textarea)) {
		.input-icon + .input-peer {
			margin-left: 0;
		}
		.input + .input-peer {
			margin-left: 0;
		}
	}

	.input-affix {
		height: var(--base-size);
		display: flex;
		align-items: center;
		padding: 0 var(--base-inline-padding);
		transition: all var(--duration-medium) ease-out;
		.input + & {
			padding-left: 0;
		}
	}

	/*
	Default variant
	*/
	&:not(.outlined) {
		font-weight: 350;
		color: var(--color-neutral-700);
		background-color: color-mix(in srgb, var(--color-neutral-500) 10%, transparent);
		:--dark & {
			color: var(--color-neutral-300);
		}
		&:hover {
			color: var(--color-neutral-800);
			box-shadow: 0 0 0 var(--base-border-width) rgba(0, 0, 0, 0.1);
			:--dark & {
				color: var(--color-neutral-200);
				box-shadow: 0 0 0 var(--base-border-width) rgba(255, 255, 255, 0.1);
			}
			.input-affix {
				opacity: 0.5;
			}
			&[data-invalid],
			&:has([data-invalid]) {
				box-shadow: none;
				:--dark & {
					box-shadow: none;
				}
			}
		}
		&[data-invalid],
		&:has([data-invalid]) {
			color: var(--color-error-600);
			background-color: color-mix(in srgb, var(--color-error-500) 10%, transparent);
			outline-color: var(--color-error-500);
			:--dark & {
				color: var(--color-error-400);
			}
		}
		&:focus,
		&:has(.input:focus) {
			color: var(--color-neutral-800);
			/* background-color: white; */
			background-color: color-mix(in srgb, var(--color-neutral-100) 10%, transparent);
			box-shadow: none;
			:--dark & {
				color: var(--color-neutral-200);
				background-color: color-mix(in srgb, var(--color-neutral-950) 15%, transparent);
			}
			.input-affix {
				opacity: 0.75;
			}
			&[data-invalid],
			&:has([data-invalid]) {
				color: var(--color-error-700);
				background-color: color-mix(in srgb, var(--color-error-500) 10%, transparent);
				:--dark & {
					color: var(--color-error-300);
				}
			}
		}
		&[data-loading] {
			color: color-mix(in srgb, var(--color-neutral-500) 50%, transparent);
			transform: scale(0.95);
			pointer-events: none;
			transition: all var(--button-duration-out) ease-out;
		}
		.input-affix {
			opacity: 0.35;
		}
	}

	/*
	Outlined variant
	*/
	&.outlined {
		color: var(--color-neutral-800);
		border: var(--base-border);
		:--dark & {
			color: var(--color-neutral-200);
		}
		&:hover {
			color: var(--color-neutral-950);
			background-color: color-mix(in srgb, var(--color-neutral-400) 25%, transparent);
			border-color: transparent;
			:--dark & {
				color: var(--color-neutral-50);
				background-color: color-mix(in srgb, var(--color-neutral-600) 25%, transparent);
				border-color: transparent;
			}
		}
		&:focus,
		&:has(.input:focus) {
			background-color: white;
			:--dark & {
				background-color: color-mix(in srgb, var(--color-neutral-950) 25%, transparent);
			}
		}
		&[data-loading] {
			color: color-mix(in srgb, var(--color-neutral-500) 50%, transparent);
			transform: scale(0.95);
			pointer-events: none;
			transition: all var(--button-duration-out) ease-out;
		}
	}
}
