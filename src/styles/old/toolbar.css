/*
Toolbar preset to nest inputs with proper inset and consequentially updated base style props.
*/
.toolbar {
	/* Public props */
	--toolbar-block-size: var(--base-block-size);
	--toolbar-radius: var(--base-radius);
	--toolbar-nesting: var(--base-nesting);

	/* Private child-facing props */
	--_nested-block-size: calc(var(--toolbar-block-size) - 2 * var(--toolbar-nesting));
	--_nested-radius: calc(var(--toolbar-radius) - var(--toolbar-nesting));

	/* Base */
	padding: var(--toolbar-nesting);
	border-radius: var(--toolbar-radius);
	display: flex;
	flex-direction: row;
	align-items: center;
	flex-wrap: nowrap;
	gap: 3px;
	flex: none;
	max-width: 100%;
	overflow-x: auto;
	max-height: 100%;
	backdrop-filter: blur(5px);
	transition: all var(--duration-fast) var(--ease-out-expo);
	background-color: color-mix(in srgb, var(--color-neutral-50) 90%, transparent);

	:--dark &,
	&:--dark {
		background-color: color-mix(in srgb, var(--color-neutral-950) 90%, transparent);
	}

	&:--vertical {
		flex-direction: column;
		overflow-y: auto;
	}

	&.rounded {
		--toolbar-radius: var(--radius-full);
	}

	& > * {
		--base-block-size: var(--_nested-block-size);
		--base-radius: var(--_nested-radius);
	}

	& > hr {
		border: none;
		width: auto;
		height: auto;
		align-self: stretch;
	}
	&:not(:--vertical) > hr {
		margin-inline: 0.75em;
		border-right: var(--base-border-width) solid var(--base-border-color);
	}
	&:--vertical > hr {
		margin-block: 0.75em;
		border-bottom: var(--base-border-width) solid var(--base-border-color);
	}
}

.toolbar-hover {
	.toolbar {
		background-color: color-mix(in srgb, var(--color-neutral-50) 35%, transparent);

		:--dark & {
			background-color: color-mix(in srgb, var(--color-neutral-950) 35%, transparent);
		}
	}

	&:hover {
		.toolbar {
			background-color: color-mix(in srgb, var(--color-neutral-50) 90%, transparent);

			:--dark & {
				background-color: color-mix(in srgb, var(--color-neutral-950) 90%, transparent);
			}
		}
	}
}
