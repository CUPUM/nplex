/* Button

	Aliased states
		- default
		- hover (:hover, :active)
		- disabled (:disabled, [aria-disabled='true'], [data-disabled='true'])
		- busy ([aria-busy='true'])
		- checked (:checked, [aria-checked='true'], [data-state='active'], [data-state='checked'], :has(:checked))
		- open ([aria-expanded='true'], [data-state='open'])
		- current ([aria-current='page'])

	Aliased properties
		- color
		- background
		- background-inset
		- text-decoration
		- text-decoration-thickness
		- text-decoration-color
		- text-decoration-offset
		- border-color
		- border-style
		- border-width
		- icon-color

	Custom properties pattern
		"--button{-mod}{-aliased_state}-{aliased_property}: value;"

	Variants
		- default
		- cta (call-to-action)
		- bordered
		- dashed
		- ghost
		- link
		- nav

	Compounds
		- danger ([data-danger=true])
	*/

.button {
	/* Default */

	&:not(.button-bordered, .button-dashed, .button-ghost, .button-cta, .button-link, .button-nav) {
		--button-color: var(--text-color-input);
		--button-background: var(--background-color-input);
		--button-background-inset: 0;
		--button-text-decoration: none;
		--button-icon-color: currentColor;
		--button-border-style: none;
		--button-hover-color: var(--text-color-input-strong);
		--button-hover-background: var(--background-color-input-strong);
		&:is([data-danger]) {
			--button-color: var(--text-color-input-error);
			--button-background: var(--background-color-input-error);
			--button-hover-color: var(--text-color-input-error-strong);
			--button-hover-background: var(--background-color-input-error-strong);
		}
	}

	/* Call to action */

	&:is(.button-cta) {
		--ripple-color: color-mix(in srgb, var(--color-primary-soft) 50%, transparent);
		--button-background-inset: 0;
		--button-color: var(--color-on-primary);
		--button-icon-color: currentColor;
		--button-background: var(--color-primary);
		--button-hover-color: var(--color-on-primary-soft);
		--button-hover-background: var(--color-primary-strong);
		--button-disabled-background: var(--text-color-base-soft);
		&:is([data-danger]) {
			--ripple-color: color-mix(in srgb, var(--color-error-soft) 50%, transparent);
			--button-color: var(--color-on-error);
			--button-background: var(--color-error);
			--button-hover-color: var(--color-on-error-strong);
			--button-hover-background: var(--color-error-strong);
		}
	}

	/* Bordered & dashed */

	&:is(.button-bordered) {
		--button-border-style: solid;
	}

	&:is(.button-dashed) {
		--button-border-style: dashed;
	}

	&:is(.button-bordered, .button-dashed) {
		--button-color: var(--text-color-input);
		--button-background: transparent;
		--button-border-color: var(--border-color);
		--button-icon-color: currentColor;
		--button-background-inset: 0.4em;
		--button-hover-color: var(--text-color-input-strong);
		--button-hover-background: var(--background-color-input-strong);
		--button-hover-border-color: transparent;
		--button-hover-background-inset: 0;
		&:is([data-danger]) {
			--button-color: var(--text-color-input-error);
			--button-border-color: var(--border-color-error);
			--button-hover-color: var(--text-color-input-error-strong);
			--button-hover-background: var(--background-color-input-error-strong);
		}
	}

	/* Ghost */

	&:is(.button-ghost) {
		--button-color: var(--text-color-input);
		--button-background: transparent;
		--button-background-inset: 0.4em;
		--button-text-decoration: none;
		--button-icon-color: currentColor;
		--button-border-style: none;
		--button-hover-color: var(--text-color-input-strong);
		--button-hover-background: var(--background-color-input-strong);
		--button-hover-background-inset: 0;
		--button-checked-color: var(--color-primary);
		--button-checked-background: color-mix(in srgb, var(--color-primary) 15%, transparent);
		--button-checked-background-inset: 0;
		--button-current-color: var(--color-primary-soft);
		&:is([data-danger]) {
			--button-color: var(--text-color-input-error);
			--button-hover-color: var(--text-color-input-error-strong);
			--button-hover-background: var(--background-color-input-error-strong);
		}
	}

	/* Link */

	&:is(.button-link) {
		--button-color: var(--color-primary);
		--button-background: transparent;
		--button-background-inset: 0.4em;
		--button-text-decoration: underline;
		--button-text-decoration-color: color-mix(in srgb, var(--color-primary-soft) var(--opacity-softer), transparent);
		--button-text-decoration-thickness: var(--input-border-width);
		--button-text-underline-offset: 0.3em;
		--button-icon-color: currentColor;
		--button-border-style: none;
		--button-hover-color: var(--color-primary-strong);
		--button-hover-background: color-mix(in srgb, var(--color-primary-soft) 15%, transparent);
		--button-hover-background-inset: 0;
		--button-hover-text-decoration-color: transparent;
		--button-hover-text-underline-offset: 0.1em;
		&:is([data-danger]) {
			--button-color: var(--text-color-input-error);
			--button-text-decoration-color: color-mix(in srgb, var(--color-error-soft) var(--opacity-softer), transparent);
			--button-hover-color: var(--text-color-input-error-strong);
			--button-hover-background: var(--background-color-input-error-strong);
		}
	}

	/* Nav */

	&:is(.button-nav) {
		justify-content: flex-start;
		--ripple-color: color-mix(in srgb, var(--color-primary) 15%, transparent);
		--button-color: var(--text-color-input-soft);
		--button-background: transparent;
		--button-background-inset: 0.4em;
		--button-text-decoration: none;
		--button-icon-color: currentColor;
		--button-border-style: none;
		--button-hover-color: var(--color-primary);
		--button-hover-background: color-mix(in srgb, var(--color-primary) 5%, transparent);
		--button-hover-background-inset: 0;
		--button-checked-color: var(--color-primary);
		--button-checked-background: color-mix(in srgb, var(--color-primary) 10%, transparent);
		--button-checked-background-inset: 0;
		--button-current-color: var(--color-primary-strong);
		--button-current-background: var(--background-color-card);
		--button-current-background-inset: 0;
		&:is([data-danger]) {
			--ripple-color: color-mix(in srgb, var(--background-error-soft) 50%, transparent);
			--button-color: var(--text-color-input-error);
			--button-hover-color: var(--text-color-input-error-strong);
			--button-hover-background: var(--background-color-input-error-strong);
		}
	}

	/* Base */

	--button-radius: var(--radius-input);
	color: var(--button-color);
	text-decoration: var(--button-text-decoration);
	text-decoration-color: var(--button-text-decoration-color);
	text-decoration-thickness: var(--button-text-decoration-thickness);
	text-underline-offset: var(--button-text-underline-offset);
	position: relative;
	cursor: pointer;
	display: inline-flex;
	flex-direction: row;
	align-items: center;
	justify-content: center;
	gap: var(--spacing-input-gutter);
	padding-top: 0;
	padding-bottom: 0;
	padding-left: var(--spacing-input-padding);
	padding-right: var(--spacing-input-padding);
	height: var(--spacing-input);
	min-height: var(--spacing-input);
	min-width: fit-content;
	border-radius: var(--button-radius);
	white-space: nowrap;
	text-overflow: ellipsis;
	user-select: none;
	z-index: 0;
	transition:
		all var(--transition-duration-medium) var(--transition-timing-function-out),
		outline var(--transition-duration-fast);

	/* Press animation */

	&:active:not(:disabled) {
		animation: var(--animate-press);
	}

	&:active:hover:not(:disabled) {
		scale: var(--scale-press);
	}

	/* Pseudos for background and border */

	&::before,
	&::after {
		content: '';
		position: absolute;
		z-index: -1;
		transition: inherit;
		border-radius: inherit;
		pointer-events: none;
		inset: 0;
	}

	&::before {
		background: var(--button-background);
		inset: var(--button-background-inset);
	}

	&::after {
		border-color: var(--button-border-color);
		border-style: var(--button-border-style);
		border-width: var(--button-border-width);
	}

	/* Icon children */

	.lucide-icon,
	.spinner {
		opacity: var(--opacity-soft);
		stroke: var(--button-icon-color);
		stroke-width: var(--stroke-width-icon);
		width: var(--spacing-input-icon);
		height: var(--spacing-input-icon);
		flex: none;
		user-select: none;
		pointer-events: none;
		transition: all var(--transition-duration-medium) var(--transition-timing-function-out);
	}

	/* Rounded */

	&:is(.rounded-full) {
		--button-radius: var(--radius-full);

		&:not(.aspect-square) {
			padding-left: calc(var(--spacing-input-padding) * 1.25);
			padding-right: calc(var(--spacing-input-padding) * 1.25);
		}
	}

	/* Square aspect */

	&:is(.aspect-square) {
		justify-content: center;
		min-width: unset;
		padding-left: 0;
		padding-right: 0;
		aspect-ratio: 1;

		.lucide-icon,
		.spinner {
			opacity: 100%;
		}
	}

	/* Hover */

	&:hover,
	&:active {
		color: var(--button-hover-color, var(--button-color));
		text-decoration: var(--button-hover-text-decoration, var(--button-text-decoration));
		text-decoration-color: var(--button-hover-text-decoration-color, var(--button-text-decoration-color));
		text-decoration-thickness: var(--button-hover-text-decoration-thickness, var(--button-text-decoration-thickness));
		text-underline-offset: var(--button-hover-text-underline-offset, var(--button-text-underline-offset));

		&::before {
			background: var(--button-hover-background, var(--button-background));
			inset: var(--button-hover-background-inset, var(--button-background-inset));
		}

		&::after {
			border-color: var(--button-hover-border-color, var(--button-border-color));
			border-style: var(--button-hover-border-style, var(--button-border-style));
			border-width: var(--button-hover-border-width, var(--button-border-width));
		}

		.lucide-icon,
		.spinner {
			opacity: 100%;
			stroke: var(--button-hover-icon-color, var(--button-icon-color));
		}
	}

	/* Disabled */

	&:disabled,
	&[aria-disabled='true'],
	&[data-disabled='true'] {
		cursor: default;
		opacity: var(--opacity-soft);
		color: var(--button-disabled-color, var(--button-color));
		text-decoration: var(--button-disabled-text-decoration, var(--button-text-decoration));
		text-decoration-color: var(--button-disabled-text-decoration-color, var(--button-text-decoration-color));
		text-decoration-thickness: var(--button-disabled-text-decoration-thickness, var(--button-text-decoration-thickness));
		text-underline-offset: var(--button-disabled-text-underline-offset, var(--button-text-underline-offset));

		&::before {
			background: var(--button-disabled-background, var(--button-background));
			inset: var(--button-disabled-background-inset, var(--button-background-inset));
		}

		&::after {
			border-color: var(--button-disabled-border-color, var(--button-border-color));
			border-style: var(--button-disabled-border-style, var(--button-border-style));
			border-width: var(--button-disabled-border-width, var(--button-border-width));
		}

		.lucide-icon,
		.spinner {
			opacity: var(--opacity-softer);
			stroke: var(--button-disabled-icon-color, var(--button-icon-color));
		}
	}

	/* Busy */

	&:where([aria-busy='true'], :has([aria-busy='true'])) {
		color: var(--button-busy-color, var(--button-color));
		text-decoration: var(--button-busy-text-decoration, var(--button-text-decoration));
		text-decoration-color: var(--button-busy-text-decoration-color, var(--button-text-decoration-color));
		text-decoration-thickness: var(--button-busy-text-decoration-thickness, var(--button-text-decoration-thickness));
		text-underline-offset: var(--button-busy-text-underline-offset, var(--button-text-underline-offset));

		&::before {
			background: var(--button-busy-background, var(--button-background));
			inset: var(--button-busy-background-inset, var(--button-background-inset));
		}

		&::after {
			border-color: var(--button-busy-border-color, var(--button-border-color));
			border-style: var(--button-busy-border-style, var(--button-border-style));
			border-width: var(--button-busy-border-width, var(--button-border-width));
		}

		.lucide-icon,
		.spinner {
			opacity: 100%;
			stroke: var(--button-busy-icon-color, var(--button-icon-color));
		}
	}

	/* Checked */

	&:checked,
	&[aria-checked='true'],
	&[data-state='active'],
	&[data-state='checked'],
	&:has(:checked) {
		color: var(--button-checked-color, var(--button-color));
		text-decoration: var(--button-checked-text-decoration, var(--button-text-decoration));
		text-decoration-color: var(--button-checked-text-decoration-color, var(--button-text-decoration-color));
		text-decoration-thickness: var(--button-checked-text-decoration-thickness, var(--button-text-decoration-thickness));
		text-underline-offset: var(--button-checked-text-underline-offset, var(--button-text-underline-offset));

		&::before {
			background: var(--button-checked-background, var(--button-background));
			inset: var(--button-checked-background-inset, var(--button-background-inset));
		}

		&::after {
			border-color: var(--button-checked-border-color, var(--button-border-color));
			border-style: var(--button-checked-border-style, var(--button-border-style));
			border-width: var(--button-checked-border-width, var(--button-border-width));
		}

		.lucide-icon,
		.spinner {
			opacity: 100%;
			stroke: var(--button-checked-icon-color, var(--button-icon-color));
		}
	}

	/* Open */

	&[aria-expanded='true'],
	&[data-state='open'] {
		color: var(--button-open-color, var(--button-color));
		text-decoration: var(--button-open-text-decoration, var(--button-text-decoration));
		text-decoration-color: var(--button-open-text-decoration-color, var(--button-text-decoration-color));
		text-decoration-thickness: var(--button-open-text-decoration-thickness, var(--button-text-decoration-thickness));
		text-underline-offset: var(--button-open-text-underline-offset, var(--button-text-underline-offset));

		&::before {
			background: var(--button-open-background, var(--button-background));
			inset: var(--button-open-background-inset, var(--button-background-inset));
		}

		&::after {
			border-color: var(--button-open-border-color, var(--button-border-color));
			border-style: var(--button-open-border-style, var(--button-border-style));
			border-width: var(--button-open-border-width, var(--button-border-width));
		}

		.lucide-icon,
		.spinner {
			opacity: 100%;
			stroke: var(--button-open-icon-color, var(--button-icon-color));
		}
	}

	/* Current */

	&[aria-current] {
		color: var(--button-current-color, var(--button-color));
		text-decoration: var(--button-current-text-decoration, var(--button-text-decoration));
		text-decoration-color: var(--button-current-text-decoration-color, var(--button-text-decoration-color));
		text-decoration-thickness: var(--button-current-text-decoration-thickness, var(--button-text-decoration-thickness));
		text-underline-offset: var(--button-current-text-underline-offset, var(--button-text-underline-offset));

		&::before {
			background: var(--button-current-background, var(--button-background));
			inset: var(--button-current-background-inset, var(--button-background-inset));
		}

		&::after {
			border-color: var(--button-current-border-color, var(--button-border-color));
			border-style: var(--button-current-border-style, var(--button-border-style));
			border-width: var(--button-current-border-width, var(--button-border-width));
		}

		.lucide-icon,
		.spinner {
			opacity: 100%;
			stroke: var(--button-current-icon-color, var(--button-icon-color));
		}
	}
}
