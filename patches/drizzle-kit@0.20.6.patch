diff --git a/bin.cjs b/bin.cjs
index 4335b1fd7e1a90cbfb59fe60dd6e7daf7e4f8a75..2a7831f19f60570cd1fe7fb53c53c366fec5ef53 100755
--- a/bin.cjs
+++ b/bin.cjs
@@ -4906,6 +4906,7 @@ var init_pgSchema = __esm({
       name: stringType(),
       tableFrom: stringType(),
       columnsFrom: stringType().array(),
+			schemaTo: stringType().optional(),
       tableTo: stringType(),
       columnsTo: stringType().array(),
       onUpdate: stringType().optional(),
@@ -5064,7 +5065,7 @@ var init_pgSchema = __esm({
         return result;
       },
       squashFK: (fk4) => {
-        return `${fk4.name};${fk4.tableFrom};${fk4.columnsFrom.join(",")};${fk4.tableTo};${fk4.columnsTo.join(",")};${fk4.onUpdate ?? ""};${fk4.onDelete ?? ""}`;
+        return `${fk4.name};${fk4.tableFrom};${fk4.columnsFrom.join(",")};${fk4.schemaTo || ""};${fk4.tableTo};${fk4.columnsTo.join(",")};${fk4.onUpdate ?? ""};${fk4.onDelete ?? ""}`;
       },
       squashPK: (pk) => {
         return `${pk.columns.join(",")};${pk.name}`;
@@ -5089,6 +5090,7 @@ var init_pgSchema = __esm({
           name,
           tableFrom,
           columnsFromStr,
+					schemaTo,
           tableTo,
           columnsToStr,
           onUpdate,
@@ -5098,6 +5100,7 @@ var init_pgSchema = __esm({
           name,
           tableFrom,
           columnsFrom: columnsFromStr.split(","),
+					schemaTo,
           tableTo,
           columnsTo: columnsToStr.split(","),
           onUpdate,
@@ -12302,12 +12305,14 @@ ${withStyle.errorWarning(`We've found duplicated unique constraint names in ${so
           const onUpdate = fk4.onUpdate;
           const reference = fk4.reference();
           const tableTo = (0, import_drizzle_orm5.getTableName)(reference.foreignTable);
+					const schemaTo = reference.foreignTable[Symbol.for("drizzle:Schema")];
           const columnsFrom = reference.columns.map((it) => it.name);
           const columnsTo = reference.foreignColumns.map((it) => it.name);
           return {
             name,
             tableFrom,
             tableTo,
+						schemaTo,
             columnsFrom,
             columnsTo,
             onDelete,
@@ -16258,6 +16263,7 @@ ${BREAKPOINT}ALTER TABLE ${tableNameWithSchema} ADD CONSTRAINT ${statement.newCo
       convert(statement) {
         const {
           name,
+					schemaTo,
           tableFrom,
           tableTo,
           columnsFrom,
@@ -16270,7 +16276,7 @@ ${BREAKPOINT}ALTER TABLE ${tableNameWithSchema} ADD CONSTRAINT ${statement.newCo
         const fromColumnsString = columnsFrom.map((it) => `"${it}"`).join(",");
         const toColumnsString = columnsTo.map((it) => `"${it}"`).join(",");
         const tableNameWithSchema = statement.schema ? `"${statement.schema}"."${tableFrom}"` : `"${tableFrom}"`;
-        const tableToNameWithSchema = statement.schema ? `"${statement.schema}"."${tableTo}"` : `"${tableTo}"`;
+        const tableToNameWithSchema = schemaTo ? `"${schemaTo}"."${tableTo}"` : `"${tableTo}"`
         const alterStatement = `ALTER TABLE ${tableNameWithSchema} ADD CONSTRAINT "${name}" FOREIGN KEY (${fromColumnsString}) REFERENCES ${tableToNameWithSchema}(${toColumnsString})${onDeleteStatement}${onUpdateStatement}`;
         let sql2 = "DO $$ BEGIN\n";
         sql2 += " " + alterStatement + ";\n";
