@use 'utils' as *;

.button {
	--button-height: calc(var(--ui-unit-lg) - 2 * var(--inset, 0px));
	--button-radius: calc(var(--radius, var(--ui-radius-md)) - var(--inset, 0px));
	position: relative;
	display: inline-grid;
	grid-template-columns:
		[full-start leading-padding-start]
		var(--ui-pad-md)
		[leading-padding-end leading-start]
		auto
		[leading-end main-start]
		1fr
		[main-end trailing-start]
		auto
		[trailing-end trailing-padding-start]
		var(--ui-pad-md)
		[trailing-padding-end full-end];
	grid-template-rows: var(--button-height);
	border: none;
	padding: 0;
	gap: 0;
	flex-direction: row;
	align-items: center;
	font-weight: 400;
	border-radius: var(--button-radius);
	cursor: pointer;
	letter-spacing: 0em;
	transform-origin: center;
}
.center {
	grid-template-columns:
		[full-start leading-padding-start]
		var(--ui-pad-md)
		[leading-padding-end leading-start]
		1fr
		[leading-end main-start]
		auto
		[main-end trailing-start]
		1fr
		[trailing-end trailing-padding-start]
		var(--ui-pad-md)
		[trailing-padding-end full-end];
}
.equi {
	flex: none;
	aspect-ratio: 1 / 1;
	justify-content: center;
	padding: 0;
	grid-template-columns:
		[full-start leading-padding-start]
		0
		[leading-padding-end leading-start]
		0
		[leading-end main-start]
		var(--button-height)
		[main-end trailing-start]
		0
		[trailing-end trailing-padding-start]
		0
		[trailing-padding-end full-end];
}
.round {
	border-radius: 999px;
}
.disabled,
.button:disabled {
	opacity: 0.25;
	pointer-events: none;
	background-color: transparent;
	color: col(fg, 100);
	.content {
		transform: scale(0.95);
	}
}
.button:focus {
	.content {
		animation: press 0.25s ease-in-out;
	}
}
.loading {
	pointer-events: none;
	.content {
		transform: scale(0.98);
		opacity: 0.25;
	}
}
.content {
	position: relative;
	display: inline-block;
	line-height: 1em;
	padding-bottom: calc(0.5em - 0.5ex);
	white-space: nowrap;
	text-overflow: ellipsis;
	transition: transform 0.1s ease-out;
}
.main {
	grid-column: main;
	.center &,
	.equi & {
		justify-content: center;
		text-align: center;
	}
	.start:not(.equi) & {
		justify-content: left;
		text-align: left;
	}
	.end:not(.equi) & {
		justify-content: right;
		text-align: right;
	}
}
.leading {
	justify-content: flex-start;
	text-align: left;
	grid-column: leading;
	&:not(:empty) {
		padding-right: 0.5em;
	}
}
.trailing {
	justify-content: flex-end;
	text-align: right;
	grid-column: trailing;
	&:not(:empty) {
		padding-left: 0.5em;
	}
}

// Default variant

.default {
	--color: #{col(fg, 500)};
	--background-color: #{col(fg, 100, 0.1)};
	--hover-color: #{col(bg, 700)};
	--hover-background-color: #{col(fg, 500)};
	--active-color: #{col(bg, 900)};
	--active-background-color: #{col(fg, 000)};
	color: var(--color);
	background-color: var(--background-color);
	transition: all 0.1s ease-out;
	&:hover,
	&:focus-visible {
		color: var(--hover-color);
		background-color: var(--hover-background-color);
	}
	&.active,
	&:global(.active) {
		color: var(--active-color);
		background-color: var(--active-background-color);
	}

	&.warning {
		--color: #{col(notice, 900)};
		--background-color: #{col(notice, 300, 0.25)};
		--hover-color: #{col(fg, 900)};
		--hover-background-color: #{col(notice, 300)};
		--active-color: #{col(bg, 900)};
		--active-background-color: #{col(fg, 000)};
	}

	&.error {
		--color: #{col(error, 900)};
		--background-color: #{col(error, 300, 0.25)};
		--hover-color: #{col(fg, 900)};
		--hover-background-color: #{col(error, 100)};
		--active-color: #{col(bg, 900)};
		--active-background-color: #{col(fg, 000)};
	}

	&.success {
		--color: #{col(success, 900)};
		--background-color: #{col(success, 300, 0.25)};
		--hover-color: #{col(fg, 900)};
		--hover-background-color: #{col(success, 300)};
		--active-color: #{col(bg, 900)};
		--active-background-color: #{col(fg, 000)};
	}
}

// Outlined variant(s)

.outlined,
.dashed {
	--color: #{col(fg, 500)};
	--background-color: transparent;
	--border-style: solid;
	--border: var(--ui-border-size) var(--border-style) currentColor;
	--hover-color: #{col(fg, 900)};
	--hover-background-color: #{col(fg, 100, 0.1)};
	--hover-border: 3px var(--border-style) transparent;
	--active-color: #{col(fg, 700)};
	--active-background-color: #{col(fg, 000, 0.1)};
	--active-border: 3px var(--border-style) transparent;
	color: var(--color);
	background-color: var(--background-color);
	transition: all 0.1s ease-out;
	&::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		border-radius: inherit;
		border: var(--border);
		opacity: 0.1;
		transition: all 0.2s ease-out;
	}
	&:hover,
	&:focus-visible {
		color: var(--hover-color);
		background-color: var(--hover-background-color);
		&::before {
			border: var(--hover-border);
		}
	}
	&.active,
	&:global(.active) {
		color: var(--active-color);
		background-color: var(--active-background-color);
		&::before {
			border: var(--active-border);
		}
	}

	&.warning {
		--color: #{col(error, 900)};
		--border: var(--ui-border-size) var(--border-style) currentColor;
		--hover-color: #{col(error, 900)};
		--hover-background-color: #{col(error, 900, 0.1)};
		--active-color: #{col(error, 900)};
		--active-background-color: #{col(error, 100, 0.1)};
	}

	&.error {
		--color: #{col(error, 700)};
		--background-color: #{col(error, 100, 0.1)};
		--border: var(--ui-border-size) var(--border-style) currentColor;
		--hover-color: #{col(error, 900)};
		--hover-background-color: #{col(error, 300, 0.2)};
		--hover-border: 3px var(--border-style) #{col(error, 500, 0)};
		--active-color: #{col(error, 900)};
		--active-background-color: #{col(error, 500, 0.2)};
		--active-border: 3px var(--border-style) #{col(error, 500, 0)};
	}

	&.success {
		--color: #{col(success, 700)};
		--background-color: #{col(success, 100, 0.1)};
		--border: var(--ui-border-size) var(--border-style) currentColor;
		--hover-color: #{col(success, 900)};
		--hover-background-color: #{col(success, 300, 0.2)};
		--hover-border: 3px var(--border-style) #{col(success, 500, 0)};
		--active-color: #{col(success, 900)};
		--active-background-color: #{col(success, 500, 0.2)};
		--active-border: 3px var(--border-style) #{col(success, 500, 0)};
	}
}

// Dashed variant

.dashed {
	--border-style: dashed;
	&.error,
	&.success {
		&::before {
			opacity: 0.35;
		}
	}
}

// Ghost variant

.ghost {
	--color: #{col(fg, 300)};
	--background-color: transparent;
	--hover-color: #{col(fg, 900)};
	--hover-background-color: #{col(fg, 100, 0.05)};
	--active-color: #{col(primary, 500)};
	--active-background-color: #{col(primary, 100, 0.1)};
	color: var(--color);
	background-color: var(--background-color);
	transition: all 0.1s;
	&:hover,
	&:focus-visible {
		color: var(--hover-color);
		background-color: var(--hover-background-color);
	}
	&.active,
	&:global(.active) {
		color: var(--active-color);
		background-color: var(--active-background-color);
	}

	&.warning {
		--color: #{col(error, 900)};
		// --hover-color: #{col(error, 900)};
		// --hover-background-color: #{col(error, 700, 0.05)};
		// --active-color: #{col(error, 900)};
		// --active-background-color: #{col(error, 700, 0.1)};
	}

	&.error {
		--color: #{col(error, 500)};
		--hover-color: #{col(error, 700)};
		--hover-background-color: #{col(error, 300, 0.2)};
		--hover-color: #{col(error, 900)};
		--hover-background-color: #{col(error, 500, 0.2)};
	}

	&.success {
		--color: #{col(success, 500)};
		--hover-color: #{col(success, 700)};
		--hover-background-color: #{col(success, 300, 0.2)};
		--hover-color: #{col(success, 900)};
		--hover-background-color: #{col(success, 500, 0.2)};
	}
}

// Call to action variant

.cta {
	--color: #{col(bg, 500)};
	--background-color: #{col(primary, 500)};
	--box-shadow: 0 0.2em 1em -0.5em #{col(primary, 300, 0)};
	--hover-color: #{col(bg, 900)};
	--hover-background-color: #{col(primary, 700)};
	--hover-box-shadow: 0 0.8em 1.5em -1em #{col(primary, 300, 0.25)};
	--active-box-shadow: 0 0.5em 1em -0.5em #{col(primary, 300, 0.5)};
	color: var(--color);
	background-color: var(--background-color);
	box-shadow: var(--color);
	transition: all 0.1s ease-out, box-shadow 0.25s ease-in-out;
	&:hover,
	&:focus-visible {
		color: var(--hover-color);
		background-color: var(--hover-background-color);
		box-shadow: var(--hover-box-shadow);
	}
	&:global(.active) {
		filter: brightness(0.9);
		box-shadow: var(--active-box-shadow);
	}

	&.warning {
		--color: #{col(bg, 300)};
		--background-color: #{col(error, 700)};
		--box-shadow: 0 0.2em 1em -0.5em #{col(error, 500, 0)};
		--hover-color: #{col(error, 100)};
		--hover-background-color: #{col(error, 900)};
		--hover-box-shadow: 0 0.8em 1.5em -1em #{col(error, 500, 0.25)};
		--active-box-shadow: 0 0.5em 1em -0.5em #{col(error, 300, 0.5)};
	}

	&.error {
		--color: #{col(error, 500)};
		--background-color: #{col(bg, 000)};
		--box-shadow: 0 0.2em 1em -0.5em #{col(error, 300, 0.25)};
		--hover-color: #{col(error, 900)};
		--hover-background-color: #{col(bg, 000)};
		--hover-box-shadow: 0 0.8em 1.5em -1em #{col(error, 300, 0.5)};
		--active-box-shadow: 0 0.5em 1em -0.5em #{col(error, 300, 0.5)};
	}

	&.success {
		--color: #{col(success, 500)};
		--background-color: #{col(bg, 000)};
		--box-shadow: 0 0.2em 1em -0.5em #{col(success, 300, 0.25)};
		--hover-color: #{col(success, 900)};
		--hover-background-color: #{col(bg, 000)};
		--hover-box-shadow: 0 0.8em 1.5em -1em #{col(success, 300, 0.5)};
		--active-box-shadow: 0 0.5em 1em -0.5em #{col(success, 300, 0.5)};
	}
}
