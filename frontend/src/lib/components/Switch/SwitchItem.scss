@use 'utils' as *;

@mixin switch($variant) {
	:global(.#{$variant}) .switch-item {
		@content;
	}
}

.switch-item {
	--switch-item-size: calc(var(--switch-size) - 2 * var(--switch-inset));
	--switch-item-radius: calc(var(--switch-radius) - var(--switch-inset));
	--switch-item-inset: var(--ui-inset-md);
	--switch-item-color: inherit;
	position: relative;
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: space-between;
	border-radius: var(--switch-item-radius);
	block-size: var(--switch-item-size);
	padding: var(--switch-item-inset);
	cursor: pointer;
	background-color: var(--switch-item-background);
	color: var(--switch-item-color);
	transition: all 0.2s ease-out;

	// @include focuspress;
}

.equi {
	aspect-ratio: 1;
	padding-inline: 0;
	justify-content: center;

	.switch-item-main {
		padding-inline: 0;
	}
}

input {
	appearance: none;
	position: absolute;
}

[data-current] {
	cursor: default;
}

.disabled,
:disabled {
	pointer-events: none;
}

.switch-item-main {
	position: relative;
	top: -0.1em;
	// padding-bottom: 0.2em;
	padding-inline: calc(var(--ui-pad-md) - var(--switch-item-inset));
}

// Default variant.
@include switch(default) {
	// --switch-item-background: transparent;

	&:hover,
	&:focus-within {
		--switch-item-color: #{col(fg, 700)};
		--switch-item-background: #{col(fg, 500, 0.1)};
	}

	&[data-current] {
		--switch-item-color: #{col(bg, 500)};
	}
}

// Outlined variant.
@include switch(outlined) {
	// --switch-item-background: transparent;

	&:hover,
	&:focus-within {
		--switch-item-color: #{col(fg, 700)};
		--switch-item-background: #{col(fg, 100, 0.1)};
	}

	&[data-current] {
		--switch-item-color: #{col(bg, 500)};
	}
}

// Feature (subtle accent) variant.
@include switch(feature) {
	&:hover,
	&:focus-within {
		--switch-item-color: #{col(primary, 500)};
	}

	&[data-current] {
		--switch-item-color: #{col(primary, 700)};
	}
}
