@use 'utils' as *;

@mixin checked-inner {
	input:checked + .toggle-inner {
		@content;
	}
}

.toggle {
	/* Customizable style props. */
	--toggle-size: var(--ui-block-md);
	--toggle-inset: var(--ui-inset);
	--toggle-radius: 99px;
	--toggle-border: 0px solid transparent;
	--toggle-thumb-outline: 0px solid transparent;
	// --toggle-direction: vertical-rl;
	position: relative;
	display: inline-block;
	cursor: pointer;
	border-radius: var(--toggle-radius);
	block-size: var(--toggle-size);
	outline: var(--ui-outline-inactive);
	font-weight: 400;
	transition: outline 0.15s ease-out;
}

.readonly,
:readonly {
	cursor: default;
}

.disabled {
	pointer-events: none;
	opacity: 0.5;
}

input:first-of-type {
	position: absolute;
	appearance: none;
}

.toggle-inner {
	position: relative;
	height: 100%;
	padding: var(--toggle-inset);
	background-color: var(--toggle-background);
	border-radius: inherit;
	transition: background-color 0.1s ease-out;
}

.toggle-padded {
	position: relative;
	height: 100%;
	display: grid;
	grid-template-columns: max-content;
	flex-direction: row;
	align-items: center;
}

.toggle-thumb {
	position: absolute;
	inset-inline-start: 0;
	block-size: 100%;
	aspect-ratio: 1;
	border-radius: calc(var(--toggle-radius) - var(--toggle-inset));
	background-color: currentColor;
	border: var(--toggle-thumb-outline);
	transform: translateX(0%);
	transition: inset-inline-start 0.2s var(--ui-ease-out), aspect-ratio 0.2s var(--ui-ease-out),
		transform 0.2s var(--ui-ease-out), background-color 0.1s ease-out;

	.toggle:active & {
		aspect-ratio: 1.25;
	}
}

.toggle-on,
.toggle-off {
	user-select: none;
	padding-inline: 0.75em;
	white-space: nowrap;
	text-overflow: ellipsis;
	position: relative;
	grid-column: 1;
	grid-row: 1;
	top: -0.1em;
	flex: 1;
	transition: all 0.2s ease;
}
.toggle-on {
	padding-inline-end: var(--toggle-size);
	opacity: 0;
	text-align: start;
}
.toggle-off {
	padding-inline-start: var(--toggle-size);
	opacity: 0.5;
	text-align: end;
}

@include checked-inner {
	.toggle-thumb {
		transform: translateX(-100%);
		inset-inline-start: 100%;
	}
	.toggle-on {
		opacity: 0.5;
	}
	.toggle-off {
		opacity: 0;
	}
}

// Default variant
.default {
	--ripple-color: #{col(bg, 000)};
	--toggle-background: #{col(fg, 100, 0.1)};
	color: col(fg, 300);
	&:hover {
		color: col(fg, 700);
	}
	@include checked-inner {
		--toggle-background: #{col(fg, 500)};
		color: col(bg, 500);
		&:hover {
			--toggle-background: #{col(fg, 700)};
		}
	}
}

// Opaque variant
.opaque {
	--ripple-color: #{col(bg, 000)};
	--toggle-background: #{col(bg, 900)};
	--toggle-thumb-color: #{col(fg, 300)};
	// --toggle-thumb-outline: 1px solid var(--toggle-thumb-color);
	&:hover {
		--toggle-thumb-color: #{col(fg, 700)};
	}
	@include checked-inner {
		--toggle-background: #{col(fg, 500)};
		color: col(bg, 900);
		// --toggle-thumb-color: #{col(fg, 900)};
		// --toggle-thumb-outline: var(--ui-border-size) solid #{col(bg, 900, 0.8)};
		&:hover {
			--toggle-background: #{col(fg, 700)};
			// --toggle-thumb-color: #{col(bg, 500)};
		}
	}
}

// Outlined variant
.outlined {
	--toggle-background: transparent;
	--toggle-thumb-color: #{col(fg, 100)};
	--toggle-border: var(--ui-border-size) solid #{col(fg, 500, 0.1)};

	&:hover {
		--toggle-thumb-color: #{col(fg, 700)};
		--toggle-border: var(--ui-border-size) solid #{col(fg, 500, 0.5)};
	}

	@include checked-inner {
		--toggle-background: #{col(fg, 500)};
		--toggle-thumb-color: #{col(bg, 500)};

		&:hover {
			--toggle-background: #{col(fg, 700)};
			--toggle-thumb-color: #{col(bg, 300)};
		}
	}
}

// Dashed variant
.dashed {
	--toggle-background: transparent;
	--toggle-thumb-color: #{col(fg, 100)};
	--toggle-border: var(--ui-border-size) dashed #{col(fg, 500, 0.1)};

	&:hover {
		--toggle-thumb-color: #{col(fg, 700)};
		--toggle-border: var(--ui-border-size) dashed #{col(fg, 500, 0.5)};
	}

	@include checked-inner {
		--toggle-background: #{col(fg, 500)};
		--toggle-thumb-color: #{col(bg, 500)};

		&:hover {
			--toggle-background: #{col(fg, 700)};
			--toggle-thumb-color: #{col(bg, 300)};
		}
	}
}

// Cta Variant

// Danger variant
