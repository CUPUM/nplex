@use '../utils' as *;

/**
 * Loading skeleton.
 * Give a placeholder / suspense element a pulsing gradient animation.
 */
.skeleton {
	@mixin skeleton-base {
		--ui-skeleton-color: #{col(fg, 500, 0.05)};
		background: linear-gradient(
			-90deg,
			var(--ui-skeleton-color) 0%,
			transparent 50%,
			var(--ui-skeleton-color) 100%
		);
		background-size: 400% 100%;
		animation: skeleton-pulse 1.3s ease-in-out infinite;
	}

	@include skeleton-base;

	&-text {
		@include skeleton-base;
		height: 1em;
		border-radius: var(--ui-radius-sm);
	}

	&-fill {
		@include skeleton-base;
		z-index: 1;
		width: 100%;
		height: 100%;
		border-radius: inherit;
		position: absolute;
		top: 0;
		left: 0;
	}
}

/**
 * Make an element rounded.
 * Also applies rounding to --radius property for compat with components
 */
.rounded {
	--radius: 999px !important;
	// border-radius: var(--radius) !important;
}

/**
 * Remove scrollbar but keep scrollability of element with overflow auto or overflow scroll.
 */
.noscrollbar {
	@include noscrollbar;
}

/**
 * Animate element when focused
 */
.focuspress {
	@include focuspress;
}

/**
 * Animate outline around element when focused
 */
.focus-outline-within,
.focus-outline-visible {
	@mixin focuseoutline {
		&::after {
			pointer-events: none;
			content: '';
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			border-radius: inherit;
			outline-offset: 0px;
			outline-color: var(--ui-outline-color);
			transition: all 0.15s;
		}
		&:focus-within,
		&:focus-visible {
			&::after {
				outline: var(--ui-outline-active);
				outline-color: var(--ui-outline-color);
			}
		}
	}

	// Excluding outlined variants
	&:not(.outlined):not(.dashed) {
		@include focuseoutline;

		&:has(&) {
			&::after {
				outline: none;
			}
		}
	}
}
