/**
 * Base style resets to remove or normalize certain user-agent styles.
 * Partially taken from https://tailwindcss.com/ 's preflight.
 * Soft-scoping the selectors with the forgiving :where() pseudo allows to let app.scss styles pass through.
 */

:where(blockquote),
:where(dl),
:where(dd),
:where(h1),
:where(h2),
:where(h3),
:where(h4),
:where(h5),
:where(h6),
:where(hr),
:where(figure),
:where(p),
:where(pre),
:where(form),
:where(fieldset),
:where(article),
:where(section),
:where(nav),
:where(menu),
:where(legend) {
	margin: 0;
	padding: 0;
	line-height: inherit;
}

:where(input),
:where(textarea),
:where(form),
:where(fieldset) {
	font-size: inherit;
	font-family: inherit;
	min-width: unset;
	color: inherit;
	border: unset;
	outline: unset;
	padding: 0;
	margin: 0;
}

:where(fieldset > legend) {
	float: left;
}

:where(button) {
	cursor: pointer;
	font-family: inherit;
	font-size: inherit;
	background: unset;
	border: unset;
	padding: unset;
	color: inherit;
}

:where(h1),
:where(h2),
:where(h3),
:where(h4),
:where(h5),
:where(h6) {
	font-size: inherit;
	font-weight: inherit;
	line-height: 1.1;
}

:where(ol),
:where(ul),
:where(menu) {
	list-style: none;
	margin: 0;
	padding: 0;
}

:where(a) {
	cursor: pointer;
	color: inherit;
	text-decoration: none;
}

:where(img),
:where(svg),
:where(video),
:where(canvas),
:where(audio),
:where(iframe),
:where(embed),
:where(object) {
	display: block;
	vertical-align: middle;
}

:where(img),
:where(video) {
	max-width: 100%;
	height: auto;
}

*,
::before,
::after {
	border-width: 0;
	border-style: solid;
	border-color: currentColor;
}

*,
::before,
::after {
	box-sizing: border-box;
}

::placeholder {
	color: inherit;
	opacity: 0.3;
	text-overflow: ellipsis;
	overflow: hidden;
	white-space: nowrap;
}

/* clears the 'X' from Internet Explorer */
input[type='search']::-ms-clear,
input[type='search']::-ms-reveal {
	display: none;
	width: 0;
	height: 0;
}
input[type='search']::-webkit-search-decoration,
input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-results-button,
input[type='search']::-webkit-search-results-decoration {
	display: none;
}

/* Prevents arrows and spinners on inputs */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
	appearance: none;
	margin: 0;
}
input[type='number'] {
	appearance: textfield;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
	transition: all 0s 50000s;
}

input:-webkit-autofill::first-line,
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active,
input:-webkit {
	font-family: inherit !important;
}

:where(code) {
	font-family: var(--ui-font-misc);
}
