@use 'sass:map';
@import '../vars/typography.scss';

/**
 * Generate the base css variables for dynamic properties of a component's style including their fallback chaining (see below).
 */
@mixin dynamic-props($component, $properties, $conditions) {
	@include _component-condition-vars($component, $properties);
	@each $c in $conditions {
		@include _component-condition-vars($component, $properties, $c);
	}
}
/**
 * Creates fallback logic for vars, where precedence order is:
 * -> user (consumer) var
 *   -> variant condition var
 *     -> variant default var
 *
 * Vars prefixed with "--ui" represent private, and sometimes computed, vars and should never be modified by parent or children.
 */
@mixin _component-condition-vars($component, $properties, $condition: 'default') {
	@each $p in $properties {
		@if $condition == 'default' {
			--ui-#{$component}-#{$p}: var(--#{$component}-#{$p}, var(--#{$component}-variant-#{$p}));
		} @else {
			--ui-#{$component}-#{$condition}-#{$p}: var(
				--#{$component}-#{$condition}-#{$p},
				var(--#{$component}-variant-#{$condition}-#{$p}, var(--#{$component}-variant-#{$p}))
			);
		}
	}
}

/**
 * Helpers to scope styles with breakpoints.
 * Defined with max-width as the app is designed desktop-first.
 */
@mixin mobile {
	@media screen and (max-width: 640px) {
		@content;
	}
}
@mixin tablet {
	@media screen and (max-width: 1024px) {
		@content;
	}
}
@mixin laptop {
	@media screen and (max-width: 1200px) {
		@content;
	}
}
@mixin desktop {
	@media screen and (max-width: 1400px) {
		@content;
	}
}

/**
 * Add a press animation on
 */
@mixin focuspress {
	&:focus,
	&:focus-within {
		animation: press 0.2s var(--ui-ease-out);
	}
}

/**
 * Hide native scrollbar.
 */
@mixin noscrollbar {
	--scroll-size: 0px;
	--scroll-color: transparent;
	scrollbar-width: none;
}

/**
 * Create a pulsing skeleton effect for loading content.
 */
@mixin skeleton-pulse($color: var(--loading-skeleton-color, #{rgb(var(--rgb-fg-500), 0.05)})) {
	background: linear-gradient(-90deg, $color 0%, transparent 50%, $color 100%);
	background-size: 400% 100%;
	animation: ui-skeleton-pulse 1.25s ease-in-out infinite;
}

/**
 * Typography mixins used as source for other derived typography styles (base and components).
 * - @mixin _typography is a private mixin used to reduce verbosity of the public mixin
 * - @mixin typography is a public mixin to generate breakpointed typography styles
 */
@mixin _typography($properties) {
	@if type-of($properties) == 'map' {
		font-size: map.get($properties, 'size');
		font-weight: map.get($properties, 'weight');
		line-height: map.get($properties, 'line');
		letter-spacing: map.get($properties, 'letter');
	}
}
@mixin typography($level, $size) {
	$properties: map.get($typography-system, $level, $size);
	@include _typography($properties);
	@include tablet {
		$tablet: map.get($properties, 'tablet');
		@include _typography($tablet);
	}
	@include mobile {
		$mobile: map.get($properties, 'mobile');
		@include _typography($mobile);
	}
}
