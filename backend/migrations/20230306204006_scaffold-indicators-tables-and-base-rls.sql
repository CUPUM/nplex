alter table "public"."project_exemplarity_indicator" drop constraint "project_exemplarity_indicator_indicator_category_id_fkey";

create table "public"."project_exemplarity_indicator_ressources" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "indicator_id" smallint not null,
    "description" text,
    "link" text
);


alter table "public"."project_exemplarity_indicator" add column "label" text not null;

alter table "public"."project_exemplarity_indicator" alter column "indicator_category_id" set not null;

alter table "public"."project_exemplarity_indicator_category" add column "label" text not null;

CREATE UNIQUE INDEX project_exemplarity_indicator_ressources_pkey ON public.project_exemplarity_indicator_ressources USING btree (id, indicator_id);

CREATE UNIQUE INDEX projects_exemplarity_indicators_pkey ON public.projects_exemplarity_indicators USING btree (project_id, exemplarity_indicator_id);

CREATE UNIQUE INDEX projects_exemplarity_indicators_un ON public.projects_exemplarity_indicators USING btree (project_id, exemplarity_indicator_id);

alter table "public"."project_exemplarity_indicator_ressources" add constraint "project_exemplarity_indicator_ressources_pkey" PRIMARY KEY using index "project_exemplarity_indicator_ressources_pkey";

alter table "public"."projects_exemplarity_indicators" add constraint "projects_exemplarity_indicators_pkey" PRIMARY KEY using index "projects_exemplarity_indicators_pkey";

alter table "public"."project_exemplarity_indicator_ressources" add constraint "project_exemplarity_indicator_ressources_indicator_id_fkey" FOREIGN KEY (indicator_id) REFERENCES project_exemplarity_indicator(id) not valid;

alter table "public"."project_exemplarity_indicator_ressources" validate constraint "project_exemplarity_indicator_ressources_indicator_id_fkey";

alter table "public"."projects_exemplarity_indicators" add constraint "projects_exemplarity_indicators_exemplarity_indicator_id_fkey" FOREIGN KEY (exemplarity_indicator_id) REFERENCES project_exemplarity_indicator(id) not valid;

alter table "public"."projects_exemplarity_indicators" validate constraint "projects_exemplarity_indicators_exemplarity_indicator_id_fkey";

alter table "public"."projects_exemplarity_indicators" add constraint "projects_exemplarity_indicators_project_id_fkey" FOREIGN KEY (project_id) REFERENCES projects(id) not valid;

alter table "public"."projects_exemplarity_indicators" validate constraint "projects_exemplarity_indicators_project_id_fkey";

alter table "public"."projects_exemplarity_indicators" add constraint "projects_exemplarity_indicators_un" UNIQUE using index "projects_exemplarity_indicators_un";

alter table "public"."project_exemplarity_indicator" add constraint "project_exemplarity_indicator_indicator_category_id_fkey" FOREIGN KEY (indicator_category_id) REFERENCES project_exemplarity_indicator_category(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."project_exemplarity_indicator" validate constraint "project_exemplarity_indicator_indicator_category_id_fkey";

create policy "Authorize indicators delete"
on "public"."project_exemplarity_indicator"
as permissive
for all
to public
using (authorize('descriptors_delete'::text));


create policy "Authorize indicators inserts"
on "public"."project_exemplarity_indicator"
as permissive
for insert
to public
with check (authorize('descriptors_insert'::text));


create policy "Authorize indicators update"
on "public"."project_exemplarity_indicator"
as permissive
for update
to public
using (authorize('descriptors_update'::text))
with check (authorize('descriptors_update'::text));



