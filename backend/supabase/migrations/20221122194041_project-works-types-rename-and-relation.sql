drop policy "Anyone can select" on "public"."project_category";

drop policy "Anyone can select" on "public"."project_type_category";

alter table "public"."project_category" drop constraint "project_category_created_by_id_fkey";

alter table "public"."project_category" drop constraint "project_category_un";

alter table "public"."project_category" drop constraint "project_category_updated_by_id_fkey";

alter table "public"."project_type" drop constraint "project_type_un";

alter table "public"."project_type_category" drop constraint "project_type_category_created_by_id_fkey";

alter table "public"."project_type_category" drop constraint "project_type_category_un";

alter table "public"."project_type_category" drop constraint "project_type_category_updated_by_id_fkey";

alter table "public"."projects" drop constraint "projects_category_id_fkey";

alter table "public"."projects" drop constraint "projects_type_id_fkey";

drop view if exists "public"."editable_projects";

alter table "public"."project_category" drop constraint "project_category_pkey";

alter table "public"."project_type" drop constraint "project_type_pkey";

alter table "public"."project_type_category" drop constraint "project_type_category_pkey";

drop index if exists "public"."project_type_category_pkey";

drop index if exists "public"."project_category_pkey";

drop index if exists "public"."project_category_un";

drop index if exists "public"."project_type_category_un";

drop index if exists "public"."project_type_pkey";

drop index if exists "public"."project_type_un";

drop table "public"."project_category";

drop table "public"."project_type_category";

create table "public"."project_type_work" (
    "type_id" smallint not null,
    "work_id" smallint not null,
    "created_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_at" timestamp with time zone not null default now(),
    "updated_by_id" uuid not null default default_uid()
);


alter table "public"."project_type_work" enable row level security;

create table "public"."project_work" (
    "id" smallint generated by default as identity not null,
    "title" text not null,
    "description" text,
    "created_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_at" timestamp with time zone not null default now(),
    "updated_by_id" uuid not null default default_uid()
);


alter table "public"."project_work" enable row level security;

create table "public"."projects_works" (
    "id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "project_id" uuid not null,
    "project_work_id" smallint not null,
    "created_by_id" uuid not null default default_uid(),
    "updated_by_id" uuid not null default default_uid()
);


alter table "public"."project_type" alter column "updated_by_id" set not null;

alter table "public"."projects" drop column "cost_max";

alter table "public"."projects" drop column "cost_min";

alter table "public"."projects" add column "cost_range" numrange;

CREATE UNIQUE INDEX project_type_work_pkey ON public.project_type_work USING btree (type_id, work_id);

CREATE UNIQUE INDEX projects_works_pkey ON public.projects_works USING btree (project_id, project_work_id);

CREATE UNIQUE INDEX project_category_pkey ON public.project_type USING btree (id);

CREATE UNIQUE INDEX project_category_un ON public.project_type USING btree (title);

CREATE UNIQUE INDEX project_type_category_un ON public.project_type_work USING btree (work_id, type_id);

CREATE UNIQUE INDEX project_type_pkey ON public.project_work USING btree (id);

CREATE UNIQUE INDEX project_type_un ON public.project_work USING btree (title);

alter table "public"."project_type" add constraint "project_category_pkey" PRIMARY KEY using index "project_category_pkey";

alter table "public"."project_type_work" add constraint "project_type_work_pkey" PRIMARY KEY using index "project_type_work_pkey";

alter table "public"."project_work" add constraint "project_type_pkey" PRIMARY KEY using index "project_type_pkey";

alter table "public"."projects_works" add constraint "projects_works_pkey" PRIMARY KEY using index "projects_works_pkey";

alter table "public"."project_type" add constraint "project_category_un" UNIQUE using index "project_category_un";

alter table "public"."project_type_work" add constraint "project_type_category_un" UNIQUE using index "project_type_category_un";

alter table "public"."project_type_work" add constraint "project_type_work_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES auth.users(id) not valid;

alter table "public"."project_type_work" validate constraint "project_type_work_created_by_id_fkey";

alter table "public"."project_type_work" add constraint "project_type_work_type_id_fkey" FOREIGN KEY (type_id) REFERENCES project_type(id) not valid;

alter table "public"."project_type_work" validate constraint "project_type_work_type_id_fkey";

alter table "public"."project_type_work" add constraint "project_type_work_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES auth.users(id) not valid;

alter table "public"."project_type_work" validate constraint "project_type_work_updated_by_id_fkey";

alter table "public"."project_type_work" add constraint "project_type_work_work_id_fkey" FOREIGN KEY (work_id) REFERENCES project_work(id) not valid;

alter table "public"."project_type_work" validate constraint "project_type_work_work_id_fkey";

alter table "public"."project_work" add constraint "project_type_un" UNIQUE using index "project_type_un";

alter table "public"."project_work" add constraint "project_work_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES auth.users(id) not valid;

alter table "public"."project_work" validate constraint "project_work_created_by_id_fkey";

alter table "public"."project_work" add constraint "project_work_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES auth.users(id) not valid;

alter table "public"."project_work" validate constraint "project_work_updated_by_id_fkey";

alter table "public"."projects_works" add constraint "projects_works_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users(id) not valid;

alter table "public"."projects_works" validate constraint "projects_works_created_by_id_fkey";

alter table "public"."projects_works" add constraint "projects_works_project_id_fkey" FOREIGN KEY (project_id) REFERENCES projects(id) not valid;

alter table "public"."projects_works" validate constraint "projects_works_project_id_fkey";

alter table "public"."projects_works" add constraint "projects_works_project_work_id_fkey" FOREIGN KEY (project_work_id) REFERENCES project_work(id) not valid;

alter table "public"."projects_works" validate constraint "projects_works_project_work_id_fkey";

alter table "public"."projects_works" add constraint "projects_works_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users(id) not valid;

alter table "public"."projects_works" validate constraint "projects_works_updated_by_id_fkey";

alter table "public"."projects" add constraint "projects_category_id_fkey" FOREIGN KEY (category_id) REFERENCES project_type(id) not valid;

alter table "public"."projects" validate constraint "projects_category_id_fkey";

alter table "public"."projects" add constraint "projects_type_id_fkey" FOREIGN KEY (type_id) REFERENCES project_work(id) not valid;

alter table "public"."projects" validate constraint "projects_type_id_fkey";

create or replace view "public"."editable_projects" as  SELECT p.id,
    p.created_at,
    p.updated_at,
    p.created_by_id,
    p.updated_by_id,
    p.title,
    p.description,
    p.site_ownership_id,
    p.site_usage_category_id,
    p.site_usage_id,
    p.site_area,
    p.category_id,
    p.area,
    p.adjacent_streets,
    p.building_area,
    p.implantation_mode_id,
    p.building_construction_year,
    p.type_id,
    p.combustible,
    p.banner_url,
    p.location_geometry,
    p.location_radius,
    p.cost_range
   FROM projects p
  WHERE user_can_edit_project(p.*);


create policy "Anyone can select"
on "public"."project_type_work"
as permissive
for select
to public
using (true);


create policy "Anyone can select"
on "public"."project_work"
as permissive
for select
to public
using (true);



