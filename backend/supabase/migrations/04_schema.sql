create table "public"."project_category" (
    "id" smallint generated by default as identity not null,
    "title" text not null,
    "description" text
);


alter table "public"."project_category" enable row level security;

create table "public"."project_event_type_subevent_type" (
    "id" smallint generated by default as identity not null,
    "type_id" smallint not null,
    "subtype_id" smallint not null,
    "created_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_at" timestamp with time zone not null default now(),
    "updated_by_id" uuid not null default default_uid()
);


alter table "public"."project_event_type_subevent_type" enable row level security;

create table "public"."project_event_type" (
    "id" smallint generated by default as identity not null,
    "title" text not null,
    "description" text,
    "durative" boolean not null,
    "created_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_at" timestamp with time zone not null default now(),
    "updated_by_id" uuid not null default default_uid()
);


alter table "public"."project_event_type" enable row level security;

create table "public"."project_exemplarity_indicator" (
    "id" smallint generated by default as identity not null,
    "title" text not null,
    "description" text,
    "category_id" smallint,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_by_id" uuid not null default default_uid()
);


alter table "public"."project_exemplarity_indicator" enable row level security;

create table "public"."project_exemplarity_indicator_category" (
    "id" smallint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "title" text not null,
    "description" text,
    "created_by_id" uuid not null default default_uid(),
    "updated_by_id" uuid not null default default_uid()
);


alter table "public"."project_exemplarity_indicator_category" enable row level security;

create table "public"."project_implantation_mode" (
    "id" smallint generated by default as identity not null,
    "title" text not null,
    "description" text
);


alter table "public"."project_implantation_mode" enable row level security;

create table "public"."project_material_origin" (
    "id" smallint generated by default as identity not null,
    "title" text not null,
    "label" text not null,
    "description" text
);


alter table "public"."project_material_origin" enable row level security;

create table "public"."project_material_type" (
    "id" integer generated by default as identity not null,
    "title" text not null,
    "description" text,
    "combustible" boolean not null,
    "created_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_at" timestamp with time zone not null default now(),
    "updated_by_id" uuid not null default default_uid()
);


alter table "public"."project_material_type" enable row level security;

create table "public"."project_material_use" (
    "id" integer generated by default as identity not null,
    "title" text not null,
    "description" text,
    "created_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_at" timestamp with time zone not null default now(),
    "updated_by_id" uuid not null default default_uid()
);


alter table "public"."project_material_use" enable row level security;

create table "public"."project_site_ownership" (
    "id" smallint generated by default as identity not null,
    "title" text not null,
    "description" text
);


alter table "public"."project_site_ownership" enable row level security;

create table "public"."project_site_usage" (
    "id" smallint generated by default as identity not null,
    "title" text not null,
    "description" text,
    "is_building" boolean not null,
    "created_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_at" timestamp with time zone not null default now(),
    "updated_by_id" uuid not null default default_uid()
);


alter table "public"."project_site_usage" enable row level security;

create table "public"."project_site_usage_category" (
    "id" smallint generated by default as identity not null,
    "title" text not null,
    "description" text
);


alter table "public"."project_site_usage_category" enable row level security;

create table "public"."project_site_usage_site_usage_category" (
    "id" smallint generated by default as identity not null,
    "usage_id" smallint not null,
    "category_id" smallint not null,
    "created_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_at" timestamp with time zone not null default now(),
    "updated_by_id" uuid not null default default_uid()
);


alter table "public"."project_site_usage_site_usage_category" enable row level security;

create table "public"."project_type" (
    "id" smallint generated by default as identity not null,
    "title" text not null,
    "description" text,
    "created_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_at" timestamp with time zone not null default now(),
    "updated_by_id" uuid not null default default_uid()
);


alter table "public"."project_type" enable row level security;

create table "public"."project_type_category" (
    "category_id" smallint not null,
    "type_id" smallint not null,
    "created_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_at" timestamp with time zone not null default now(),
    "updated_by_id" uuid not null default default_uid()
);


alter table "public"."project_type_category" enable row level security;

create table "public"."projects" (
    "id" uuid not null default uuid_generate_v4(),
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_by_id" uuid not null default default_uid(),
    "title" text not null,
    "description" text,
    "site_ownership_id" smallint,
    "site_usage_category_id" smallint,
    "site_usage_id" smallint,
    "site_area" numeric,
    "category_id" smallint,
    "area" numeric,
    "adjacent_streets" smallint,
    "location_geometry" postgis.geometry,
    "building_area" numeric,
    "implantation_mode_id" smallint,
    "building_construction_year" smallint,
    "cost_min" integer,
    "cost_max" integer,
    "type_id" smallint,
    "combustible" boolean,
    "banner_url" text
);


alter table "public"."projects" enable row level security;

create table "public"."projects_events" (
    "id" uuid not null default uuid_generate_v4(),
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_by_id" uuid not null default default_uid(),
    "project_id" uuid not null,
    "type_id" smallint not null,
    "parent_id" uuid,
    "title" text not null,
    "description" text,
    "start_date" timestamp with time zone not null,
    "end_date" timestamp with time zone
);


alter table "public"."projects_events" enable row level security;

create table "public"."projects_events_ressources" (
    "id" uuid not null default uuid_generate_v4(),
    "event_id" uuid not null,
    "project_id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_by_id" uuid not null default default_uid(),
    "title" text not null,
    "description" text,
    "url" text
);


alter table "public"."projects_events_ressources" enable row level security;

create table "public"."projects_exemplarity_indicators" (
    "id" uuid not null default uuid_generate_v4(),
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_by_id" uuid not null default default_uid(),
    "project_id" uuid not null,
    "exemplarity_indicator_id" smallint not null,
    "description" text
);


alter table "public"."projects_exemplarity_indicators" enable row level security;

create table "public"."projects_likes_sums" (
    "project_id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "sum" integer not null default 0
);


alter table "public"."projects_likes_sums" enable row level security;

create table "public"."projects_materials" (
    "id" uuid not null default uuid_generate_v4(),
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_by_id" uuid not null default default_uid(),
    "project_id" uuid not null,
    "material_type_id" integer not null,
    "origin_id" smallint,
    "sustainability" numeric(1,1),
    "description" text
);


alter table "public"."projects_materials" enable row level security;

create table "public"."projects_materials_uses" (
    "id" integer generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_by_id" uuid not null default default_uid(),
    "project_id" uuid not null,
    "project_material_id" uuid not null,
    "material_use_id" integer not null,
    "description" text
);


alter table "public"."projects_materials_uses" enable row level security;

create table "public"."projects_programs" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_at" timestamp with time zone not null default now(),
    "updated_by_id" uuid not null default default_uid(),
    "project_id" uuid not null,
    "title" text not null,
    "description" text
);


alter table "public"."projects_programs" enable row level security;

create table "public"."projects_publication_status" (
    "project_id" uuid not null,
    "updated_at" timestamp with time zone not null default now(),
    "updated_by_id" uuid not null default default_uid(),
    "status" publication_status not null default 'unpublished'::publication_status,
    "created_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid()
);


alter table "public"."projects_publication_status" enable row level security;

create table "public"."projects_users" (
    "project_id" uuid not null,
    "user_id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "granted_role" user_role not null default 'editor'::user_role,
    "updated_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default default_uid(),
    "updated_by_id" uuid not null default default_uid()
);


alter table "public"."projects_users" enable row level security;

create table "public"."users_profiles" (
    "user_id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "avatar_url" text,
    "firstname" text,
    "middlename" text,
    "lastname" text,
    "about" text,
    "public_email" text,
    "updated_by_id" uuid default default_uid()
);


alter table "public"."users_profiles" enable row level security;

create table "public"."users_projects_collections" (
    "id" uuid not null default uuid_generate_v4(),
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "created_by_id" uuid not null default auth.uid(),
    "is_public" boolean not null default true,
    "title" text not null,
    "description" text,
    "updated_by_id" uuid not null default auth.uid()
);


alter table "public"."users_projects_collections" enable row level security;

create table "public"."users_projects_collections_items" (
    "id" integer generated by default as identity not null,
    "created_by_id" uuid not null default auth.uid(),
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "collection_id" uuid not null,
    "project_id" uuid not null,
    "description" text,
    "updated_by_id" uuid not null default default_uid()
);


alter table "public"."users_projects_collections_items" enable row level security;

create table "public"."users_projects_likes" (
    "id" integer generated by default as identity not null,
    "user_id" uuid not null default auth.uid(),
    "project_id" uuid not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."users_projects_likes" enable row level security;

create table "public"."users_roles" (
    "user_id" uuid not null,
    "updated_at" timestamp with time zone not null default now(),
    "role" user_role not null default 'visitor'::user_role,
    "updated_by_id" uuid default default_uid()
);


alter table "public"."users_roles" enable row level security;

CREATE UNIQUE INDEX project_event_type_subevent_type_pkey ON public.project_event_type_subevent_type USING btree (type_id, subtype_id);

CREATE UNIQUE INDEX project_event_type_pkey ON public.project_event_type USING btree (id);

CREATE UNIQUE INDEX project_exemplarity_indicator_category_pkey ON public.project_exemplarity_indicator_category USING btree (id);

CREATE UNIQUE INDEX project_exemplarity_indicator_pkey ON public.project_exemplarity_indicator USING btree (id);

CREATE UNIQUE INDEX project_implantation_mode_pkey ON public.project_implantation_mode USING btree (id);

CREATE UNIQUE INDEX project_implantation_mode_title_key ON public.project_implantation_mode USING btree (title);

CREATE UNIQUE INDEX project_material_origin_label_key ON public.project_material_origin USING btree (label);

CREATE UNIQUE INDEX project_material_origin_pkey ON public.project_material_origin USING btree (id);

CREATE UNIQUE INDEX project_material_origin_title_key ON public.project_material_origin USING btree (title);

CREATE UNIQUE INDEX project_material_type_pkey ON public.project_material_type USING btree (id);

CREATE UNIQUE INDEX project_material_type_title_key ON public.project_material_type USING btree (title);

CREATE UNIQUE INDEX project_material_use_pkey ON public.project_material_use USING btree (id);

CREATE UNIQUE INDEX project_material_use_title_key ON public.project_material_use USING btree (title);

CREATE UNIQUE INDEX project_site_ownership_pkey ON public.project_site_ownership USING btree (id);

CREATE UNIQUE INDEX project_site_usage_by_category_pkey ON public.project_site_usage_site_usage_category USING btree (usage_id, category_id);

CREATE UNIQUE INDEX project_site_usage_by_category_usage_id_category_id_key ON public.project_site_usage_site_usage_category USING btree (usage_id, category_id);

CREATE UNIQUE INDEX project_site_usage_category_pkey ON public.project_site_usage_category USING btree (id);

CREATE UNIQUE INDEX project_site_usage_site_usage_category_usage_id_category_id_key ON public.project_site_usage_site_usage_category USING btree (usage_id, category_id);

CREATE UNIQUE INDEX project_site_usage_pkey ON public.project_site_usage USING btree (id);

CREATE UNIQUE INDEX project_sub_type_parent_type_pkey ON public.project_type_category USING btree (category_id, type_id);

CREATE UNIQUE INDEX project_sub_type_parent_type_type_id_sub_type_id_key ON public.project_type_category USING btree (category_id, type_id);

CREATE UNIQUE INDEX project_sub_type_pkey ON public.project_type USING btree (id);

CREATE UNIQUE INDEX project_sub_type_title_key ON public.project_type USING btree (title);

CREATE UNIQUE INDEX project_type_pkey ON public.project_category USING btree (id);

CREATE UNIQUE INDEX project_types_sub_types_type_id_sub_type_id_key ON public.project_type_category USING btree (category_id, type_id);

CREATE UNIQUE INDEX projects_events_pkey ON public.projects_events USING btree (id);

CREATE UNIQUE INDEX projects_events_ressources_pkey ON public.projects_events_ressources USING btree (id);

CREATE UNIQUE INDEX projects_exemplarity_indicato_exemplarity_indicator_id_proj_key ON public.projects_exemplarity_indicators USING btree (exemplarity_indicator_id, project_id);

CREATE UNIQUE INDEX projects_exemplarity_indicators_pkey ON public.projects_exemplarity_indicators USING btree (id);

CREATE UNIQUE INDEX projects_likes_sums_pkey ON public.projects_likes_sums USING btree (project_id);

CREATE UNIQUE INDEX projects_likes_sums_un ON public.projects_likes_sums USING btree (project_id);

CREATE UNIQUE INDEX projects_materials_pkey ON public.projects_materials USING btree (id);

CREATE UNIQUE INDEX projects_materials_uses_pkey ON public.projects_materials_uses USING btree (id);

CREATE UNIQUE INDEX projects_pkey ON public.projects USING btree (id);

CREATE UNIQUE INDEX projects_programs_pkey ON public.projects_programs USING btree (id);

CREATE UNIQUE INDEX projects_publication_status_pkey ON public.projects_publication_status USING btree (project_id);

CREATE UNIQUE INDEX projects_publication_status_project_id_key ON public.projects_publication_status USING btree (project_id);

CREATE UNIQUE INDEX projects_title_key ON public.projects USING btree (title);

CREATE UNIQUE INDEX projects_users_pkey ON public.projects_users USING btree (project_id, user_id);

CREATE UNIQUE INDEX projects_users_project_id_user_id ON public.projects_users USING btree (project_id, user_id);

CREATE UNIQUE INDEX projects_users_user_id_project_id_key ON public.projects_users USING btree (user_id, project_id);

CREATE UNIQUE INDEX users_profiles_pkey ON public.users_profiles USING btree (user_id);

CREATE UNIQUE INDEX users_profiles_user_id_key ON public.users_profiles USING btree (user_id);

CREATE UNIQUE INDEX users_projects_collections_creator_title_un ON public.users_projects_collections USING btree (created_by_id, title);

CREATE UNIQUE INDEX users_projects_collections_items_collection_id_project_id_key ON public.users_projects_collections_items USING btree (collection_id, project_id);

CREATE UNIQUE INDEX users_projects_collections_items_pkey ON public.users_projects_collections_items USING btree (id);

CREATE UNIQUE INDEX users_projects_collections_pkey ON public.users_projects_collections USING btree (id);

CREATE UNIQUE INDEX users_projects_collections_title_creator_un ON public.users_projects_collections USING btree (title, created_by_id);

CREATE UNIQUE INDEX users_projects_likes_pkey ON public.users_projects_likes USING btree (id, project_id, user_id);

CREATE UNIQUE INDEX users_projects_likes_project_id_user_id_key ON public.users_projects_likes USING btree (project_id, user_id);

CREATE UNIQUE INDEX users_projects_likes_user_id_project_id_key ON public.users_projects_likes USING btree (user_id, project_id);

CREATE UNIQUE INDEX users_roles_pkey ON public.users_roles USING btree (user_id);

CREATE UNIQUE INDEX users_roles_user_id_key ON public.users_roles USING btree (user_id);

alter table "public"."project_category" add constraint "project_type_pkey" PRIMARY KEY using index "project_type_pkey";

alter table "public"."project_event_type_subevent_type" add constraint "project_event_type_subevent_type_pkey" PRIMARY KEY using index "project_event_type_subevent_type_pkey";

alter table "public"."project_event_type" add constraint "project_event_type_pkey" PRIMARY KEY using index "project_event_type_pkey";

alter table "public"."project_exemplarity_indicator" add constraint "project_exemplarity_indicator_pkey" PRIMARY KEY using index "project_exemplarity_indicator_pkey";

alter table "public"."project_exemplarity_indicator_category" add constraint "project_exemplarity_indicator_category_pkey" PRIMARY KEY using index "project_exemplarity_indicator_category_pkey";

alter table "public"."project_implantation_mode" add constraint "project_implantation_mode_pkey" PRIMARY KEY using index "project_implantation_mode_pkey";

alter table "public"."project_material_origin" add constraint "project_material_origin_pkey" PRIMARY KEY using index "project_material_origin_pkey";

alter table "public"."project_material_type" add constraint "project_material_type_pkey" PRIMARY KEY using index "project_material_type_pkey";

alter table "public"."project_material_use" add constraint "project_material_use_pkey" PRIMARY KEY using index "project_material_use_pkey";

alter table "public"."project_site_ownership" add constraint "project_site_ownership_pkey" PRIMARY KEY using index "project_site_ownership_pkey";

alter table "public"."project_site_usage" add constraint "project_site_usage_pkey" PRIMARY KEY using index "project_site_usage_pkey";

alter table "public"."project_site_usage_category" add constraint "project_site_usage_category_pkey" PRIMARY KEY using index "project_site_usage_category_pkey";

alter table "public"."project_site_usage_site_usage_category" add constraint "project_site_usage_by_category_pkey" PRIMARY KEY using index "project_site_usage_by_category_pkey";

alter table "public"."project_type" add constraint "project_sub_type_pkey" PRIMARY KEY using index "project_sub_type_pkey";

alter table "public"."project_type_category" add constraint "project_sub_type_parent_type_pkey" PRIMARY KEY using index "project_sub_type_parent_type_pkey";

alter table "public"."projects" add constraint "projects_pkey" PRIMARY KEY using index "projects_pkey";

alter table "public"."projects_events" add constraint "projects_events_pkey" PRIMARY KEY using index "projects_events_pkey";

alter table "public"."projects_events_ressources" add constraint "projects_events_ressources_pkey" PRIMARY KEY using index "projects_events_ressources_pkey";

alter table "public"."projects_exemplarity_indicators" add constraint "projects_exemplarity_indicators_pkey" PRIMARY KEY using index "projects_exemplarity_indicators_pkey";

alter table "public"."projects_likes_sums" add constraint "projects_likes_sums_pkey" PRIMARY KEY using index "projects_likes_sums_pkey";

alter table "public"."projects_materials" add constraint "projects_materials_pkey" PRIMARY KEY using index "projects_materials_pkey";

alter table "public"."projects_materials_uses" add constraint "projects_materials_uses_pkey" PRIMARY KEY using index "projects_materials_uses_pkey";

alter table "public"."projects_programs" add constraint "projects_programs_pkey" PRIMARY KEY using index "projects_programs_pkey";

alter table "public"."projects_publication_status" add constraint "projects_publication_status_pkey" PRIMARY KEY using index "projects_publication_status_pkey";

alter table "public"."projects_users" add constraint "projects_users_pkey" PRIMARY KEY using index "projects_users_pkey";

alter table "public"."users_profiles" add constraint "users_profiles_pkey" PRIMARY KEY using index "users_profiles_pkey";

alter table "public"."users_projects_collections" add constraint "users_projects_collections_pkey" PRIMARY KEY using index "users_projects_collections_pkey";

alter table "public"."users_projects_collections_items" add constraint "users_projects_collections_items_pkey" PRIMARY KEY using index "users_projects_collections_items_pkey";

alter table "public"."users_projects_likes" add constraint "users_projects_likes_pkey" PRIMARY KEY using index "users_projects_likes_pkey";

alter table "public"."users_roles" add constraint "users_roles_pkey" PRIMARY KEY using index "users_roles_pkey";

alter table "public"."project_event_type_subevent_type" add constraint "project_event_type_subevent_type_subtype_id_fkey" FOREIGN KEY (subtype_id) REFERENCES project_event_type(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."project_event_type_subevent_type" validate constraint "project_event_type_subevent_type_subtype_id_fkey";

alter table "public"."project_event_type_subevent_type" add constraint "project_event_type_subevent_type_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_event_type_subevent_type" validate constraint "project_event_type_subevent_type_created_by_id_fkey";

alter table "public"."project_event_type_subevent_type" add constraint "project_event_type_subevent_type_type_id_fkey" FOREIGN KEY (type_id) REFERENCES project_event_type(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."project_event_type_subevent_type" validate constraint "project_event_type_subevent_type_type_id_fkey";

alter table "public"."project_event_type_subevent_type" add constraint "project_event_type_subevent_type_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_event_type_subevent_type" validate constraint "project_event_type_subevent_type_updated_by_id_fkey";

alter table "public"."project_event_type" add constraint "project_event_type_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_event_type" validate constraint "project_event_type_created_by_id_fkey";

alter table "public"."project_event_type" add constraint "project_event_type_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_event_type" validate constraint "project_event_type_updated_by_id_fkey";

alter table "public"."project_exemplarity_indicator" add constraint "project_exemplarity_indicator_category_id_fkey" FOREIGN KEY (category_id) REFERENCES project_exemplarity_indicator_category(id) ON DELETE SET NULL ON UPDATE CASCADE not valid;

alter table "public"."project_exemplarity_indicator" validate constraint "project_exemplarity_indicator_category_id_fkey";

alter table "public"."project_exemplarity_indicator" add constraint "project_exemplarity_indicator_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_exemplarity_indicator" validate constraint "project_exemplarity_indicator_created_by_id_fkey";

alter table "public"."project_exemplarity_indicator" add constraint "project_exemplarity_indicator_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_exemplarity_indicator" validate constraint "project_exemplarity_indicator_updated_by_id_fkey";

alter table "public"."project_exemplarity_indicator_category" add constraint "project_exemplarity_indicator_category_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_exemplarity_indicator_category" validate constraint "project_exemplarity_indicator_category_created_by_id_fkey";

alter table "public"."project_exemplarity_indicator_category" add constraint "project_exemplarity_indicator_category_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_exemplarity_indicator_category" validate constraint "project_exemplarity_indicator_category_updated_by_id_fkey";

alter table "public"."project_implantation_mode" add constraint "project_implantation_mode_title_key" UNIQUE using index "project_implantation_mode_title_key";

alter table "public"."project_material_origin" add constraint "project_material_origin_label_key" UNIQUE using index "project_material_origin_label_key";

alter table "public"."project_material_origin" add constraint "project_material_origin_title_key" UNIQUE using index "project_material_origin_title_key";

alter table "public"."project_material_type" add constraint "project_material_type_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_material_type" validate constraint "project_material_type_created_by_id_fkey";

alter table "public"."project_material_type" add constraint "project_material_type_title_key" UNIQUE using index "project_material_type_title_key";

alter table "public"."project_material_type" add constraint "project_material_type_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_material_type" validate constraint "project_material_type_updated_by_id_fkey";

alter table "public"."project_material_use" add constraint "project_material_use_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_material_use" validate constraint "project_material_use_created_by_id_fkey";

alter table "public"."project_material_use" add constraint "project_material_use_title_key" UNIQUE using index "project_material_use_title_key";

alter table "public"."project_material_use" add constraint "project_material_use_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_material_use" validate constraint "project_material_use_updated_by_id_fkey";

alter table "public"."project_site_usage" add constraint "project_site_usage_fk" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_site_usage" validate constraint "project_site_usage_fk";

alter table "public"."project_site_usage" add constraint "project_site_usage_fk_1" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_site_usage" validate constraint "project_site_usage_fk_1";

alter table "public"."project_site_usage_site_usage_category" add constraint "project_site_usage_by_category_usage_id_category_id_key" UNIQUE using index "project_site_usage_by_category_usage_id_category_id_key";

alter table "public"."project_site_usage_site_usage_category" add constraint "project_site_usage_site_usage_category_category_id_fkey" FOREIGN KEY (category_id) REFERENCES project_site_usage_category(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."project_site_usage_site_usage_category" validate constraint "project_site_usage_site_usage_category_category_id_fkey";

alter table "public"."project_site_usage_site_usage_category" add constraint "project_site_usage_site_usage_category_fk" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_site_usage_site_usage_category" validate constraint "project_site_usage_site_usage_category_fk";

alter table "public"."project_site_usage_site_usage_category" add constraint "project_site_usage_site_usage_category_fk_1" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_site_usage_site_usage_category" validate constraint "project_site_usage_site_usage_category_fk_1";

alter table "public"."project_site_usage_site_usage_category" add constraint "project_site_usage_site_usage_category_usage_id_category_id_key" UNIQUE using index "project_site_usage_site_usage_category_usage_id_category_id_key";

alter table "public"."project_site_usage_site_usage_category" add constraint "project_site_usage_site_usage_category_usage_id_fkey" FOREIGN KEY (usage_id) REFERENCES project_site_usage(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."project_site_usage_site_usage_category" validate constraint "project_site_usage_site_usage_category_usage_id_fkey";

alter table "public"."project_type" add constraint "project_sub_type_title_key" UNIQUE using index "project_sub_type_title_key";

alter table "public"."project_type" add constraint "project_type_fk" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_type" validate constraint "project_type_fk";

alter table "public"."project_type" add constraint "project_type_fk_1" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_type" validate constraint "project_type_fk_1";

alter table "public"."project_type_category" add constraint "project_sub_type_parent_type_type_id_sub_type_id_key" UNIQUE using index "project_sub_type_parent_type_type_id_sub_type_id_key";

alter table "public"."project_type_category" add constraint "project_type_category_category_id_fkey" FOREIGN KEY (category_id) REFERENCES project_category(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."project_type_category" validate constraint "project_type_category_category_id_fkey";

alter table "public"."project_type_category" add constraint "project_type_category_fk" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_type_category" validate constraint "project_type_category_fk";

alter table "public"."project_type_category" add constraint "project_type_category_fk_1" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."project_type_category" validate constraint "project_type_category_fk_1";

alter table "public"."project_type_category" add constraint "project_type_category_type_id_fkey" FOREIGN KEY (type_id) REFERENCES project_type(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."project_type_category" validate constraint "project_type_category_type_id_fkey";

alter table "public"."project_type_category" add constraint "project_types_sub_types_type_id_sub_type_id_key" UNIQUE using index "project_types_sub_types_type_id_sub_type_id_key";

alter table "public"."projects" add constraint "projects_category_id_fkey" FOREIGN KEY (category_id) REFERENCES project_category(id) ON DELETE SET NULL ON UPDATE CASCADE not valid;

alter table "public"."projects" validate constraint "projects_category_id_fkey";

alter table "public"."projects" add constraint "projects_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects" validate constraint "projects_created_by_id_fkey";

alter table "public"."projects" add constraint "projects_implantation_mode_id_fkey" FOREIGN KEY (implantation_mode_id) REFERENCES project_implantation_mode(id) ON DELETE SET NULL ON UPDATE CASCADE not valid;

alter table "public"."projects" validate constraint "projects_implantation_mode_id_fkey";

alter table "public"."projects" add constraint "projects_site_ownership_id_fkey" FOREIGN KEY (site_ownership_id) REFERENCES project_site_ownership(id) ON DELETE SET NULL ON UPDATE CASCADE not valid;

alter table "public"."projects" validate constraint "projects_site_ownership_id_fkey";

alter table "public"."projects" add constraint "projects_site_usage_category_id_fkey" FOREIGN KEY (site_usage_category_id) REFERENCES project_site_usage_category(id) ON DELETE SET NULL ON UPDATE CASCADE not valid;

alter table "public"."projects" validate constraint "projects_site_usage_category_id_fkey";

alter table "public"."projects" add constraint "projects_site_usage_id_fkey" FOREIGN KEY (site_usage_id) REFERENCES project_site_usage(id) ON DELETE SET NULL ON UPDATE CASCADE not valid;

alter table "public"."projects" validate constraint "projects_site_usage_id_fkey";

alter table "public"."projects" add constraint "projects_title_key" UNIQUE using index "projects_title_key";

alter table "public"."projects" add constraint "projects_type_id_fkey" FOREIGN KEY (type_id) REFERENCES project_type(id) ON DELETE SET NULL ON UPDATE CASCADE not valid;

alter table "public"."projects" validate constraint "projects_type_id_fkey";

alter table "public"."projects" add constraint "projects_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects" validate constraint "projects_updated_by_id_fkey";

alter table "public"."projects_events" add constraint "projects_events_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects_events" validate constraint "projects_events_created_by_id_fkey";

alter table "public"."projects_events" add constraint "projects_events_parent_id_fkey" FOREIGN KEY (parent_id) REFERENCES projects_events(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."projects_events" validate constraint "projects_events_parent_id_fkey";

alter table "public"."projects_events" add constraint "projects_events_project_id_fkey" FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."projects_events" validate constraint "projects_events_project_id_fkey";

alter table "public"."projects_events" add constraint "projects_events_type_id_fkey" FOREIGN KEY (type_id) REFERENCES project_event_type(id) ON DELETE RESTRICT ON UPDATE CASCADE not valid;

alter table "public"."projects_events" validate constraint "projects_events_type_id_fkey";

alter table "public"."projects_events" add constraint "projects_events_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects_events" validate constraint "projects_events_updated_by_id_fkey";

alter table "public"."projects_events_ressources" add constraint "projects_events_ressources_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects_events_ressources" validate constraint "projects_events_ressources_created_by_id_fkey";

alter table "public"."projects_events_ressources" add constraint "projects_events_ressources_event_id_fkey" FOREIGN KEY (event_id) REFERENCES projects_events(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."projects_events_ressources" validate constraint "projects_events_ressources_event_id_fkey";

alter table "public"."projects_events_ressources" add constraint "projects_events_ressources_project_id_fkey" FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."projects_events_ressources" validate constraint "projects_events_ressources_project_id_fkey";

alter table "public"."projects_events_ressources" add constraint "projects_events_ressources_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects_events_ressources" validate constraint "projects_events_ressources_updated_by_id_fkey";

alter table "public"."projects_exemplarity_indicators" add constraint "projects_exemplarity_indicato_exemplarity_indicator_id_proj_key" UNIQUE using index "projects_exemplarity_indicato_exemplarity_indicator_id_proj_key";

alter table "public"."projects_exemplarity_indicators" add constraint "projects_exemplarity_indicators_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects_exemplarity_indicators" validate constraint "projects_exemplarity_indicators_created_by_id_fkey";

alter table "public"."projects_exemplarity_indicators" add constraint "projects_exemplarity_indicators_exemplarity_indicator_id_fkey" FOREIGN KEY (exemplarity_indicator_id) REFERENCES project_exemplarity_indicator(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."projects_exemplarity_indicators" validate constraint "projects_exemplarity_indicators_exemplarity_indicator_id_fkey";

alter table "public"."projects_exemplarity_indicators" add constraint "projects_exemplarity_indicators_project_id_fkey" FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."projects_exemplarity_indicators" validate constraint "projects_exemplarity_indicators_project_id_fkey";

alter table "public"."projects_exemplarity_indicators" add constraint "projects_exemplarity_indicators_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects_exemplarity_indicators" validate constraint "projects_exemplarity_indicators_updated_by_id_fkey";

alter table "public"."projects_likes_sums" add constraint "projects_likes_sums_fk" FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."projects_likes_sums" validate constraint "projects_likes_sums_fk";

alter table "public"."projects_likes_sums" add constraint "projects_likes_sums_un" UNIQUE using index "projects_likes_sums_un";

alter table "public"."projects_materials" add constraint "projects_materials_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects_materials" validate constraint "projects_materials_created_by_id_fkey";

alter table "public"."projects_materials" add constraint "projects_materials_material_type_id_fkey" FOREIGN KEY (material_type_id) REFERENCES project_material_type(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."projects_materials" validate constraint "projects_materials_material_type_id_fkey";

alter table "public"."projects_materials" add constraint "projects_materials_origin_id_fkey" FOREIGN KEY (origin_id) REFERENCES project_material_origin(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."projects_materials" validate constraint "projects_materials_origin_id_fkey";

alter table "public"."projects_materials" add constraint "projects_materials_project_id_fkey" FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."projects_materials" validate constraint "projects_materials_project_id_fkey";

alter table "public"."projects_materials" add constraint "projects_materials_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects_materials" validate constraint "projects_materials_updated_by_id_fkey";

alter table "public"."projects_materials_uses" add constraint "projects_materials_uses_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects_materials_uses" validate constraint "projects_materials_uses_created_by_id_fkey";

alter table "public"."projects_materials_uses" add constraint "projects_materials_uses_material_use_id_fkey" FOREIGN KEY (material_use_id) REFERENCES project_material_use(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."projects_materials_uses" validate constraint "projects_materials_uses_material_use_id_fkey";

alter table "public"."projects_materials_uses" add constraint "projects_materials_uses_project_id_fkey" FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."projects_materials_uses" validate constraint "projects_materials_uses_project_id_fkey";

alter table "public"."projects_materials_uses" add constraint "projects_materials_uses_project_material_id_fkey" FOREIGN KEY (project_material_id) REFERENCES projects_materials(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."projects_materials_uses" validate constraint "projects_materials_uses_project_material_id_fkey";

alter table "public"."projects_materials_uses" add constraint "projects_materials_uses_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects_materials_uses" validate constraint "projects_materials_uses_updated_by_id_fkey";

alter table "public"."projects_programs" add constraint "projects_programs_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects_programs" validate constraint "projects_programs_created_by_id_fkey";

alter table "public"."projects_programs" add constraint "projects_programs_project_id_fkey" FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."projects_programs" validate constraint "projects_programs_project_id_fkey";

alter table "public"."projects_programs" add constraint "projects_programs_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects_programs" validate constraint "projects_programs_updated_by_id_fkey";

alter table "public"."projects_publication_status" add constraint "projects_publication_status_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects_publication_status" validate constraint "projects_publication_status_created_by_id_fkey";

alter table "public"."projects_publication_status" add constraint "projects_publication_status_project_id_fkey" FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."projects_publication_status" validate constraint "projects_publication_status_project_id_fkey";

alter table "public"."projects_publication_status" add constraint "projects_publication_status_project_id_key" UNIQUE using index "projects_publication_status_project_id_key";

alter table "public"."projects_publication_status" add constraint "projects_publication_status_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects_publication_status" validate constraint "projects_publication_status_updated_by_id_fkey";

alter table "public"."projects_users" add constraint "projects_users_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects_users" validate constraint "projects_users_created_by_id_fkey";

alter table "public"."projects_users" add constraint "projects_users_project_id_fkey" FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."projects_users" validate constraint "projects_users_project_id_fkey";

alter table "public"."projects_users" add constraint "projects_users_project_id_user_id" UNIQUE using index "projects_users_project_id_user_id";

alter table "public"."projects_users" add constraint "projects_users_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."projects_users" validate constraint "projects_users_updated_by_id_fkey";

alter table "public"."projects_users" add constraint "projects_users_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users_profiles(user_id) ON DELETE CASCADE not valid;

alter table "public"."projects_users" validate constraint "projects_users_user_id_fkey";

alter table "public"."projects_users" add constraint "projects_users_user_id_project_id_key" UNIQUE using index "projects_users_user_id_project_id_key";

alter table "public"."users_profiles" add constraint "users_profiles_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."users_profiles" validate constraint "users_profiles_updated_by_id_fkey";

alter table "public"."users_profiles" add constraint "users_profiles_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."users_profiles" validate constraint "users_profiles_user_id_fkey";

alter table "public"."users_profiles" add constraint "users_profiles_user_id_key" UNIQUE using index "users_profiles_user_id_key";

alter table "public"."users_projects_collections" add constraint "users_projects_collections_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE CASCADE not valid;

alter table "public"."users_projects_collections" validate constraint "users_projects_collections_created_by_id_fkey";

alter table "public"."users_projects_collections" add constraint "users_projects_collections_creator_title_un" UNIQUE using index "users_projects_collections_creator_title_un";

alter table "public"."users_projects_collections" add constraint "users_projects_collections_title_creator_un" UNIQUE using index "users_projects_collections_title_creator_un";

alter table "public"."users_projects_collections" add constraint "users_projects_collections_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE CASCADE not valid;

alter table "public"."users_projects_collections" validate constraint "users_projects_collections_updated_by_id_fkey";

alter table "public"."users_projects_collections_items" add constraint "users_projects_collections_items_collection_id_fkey" FOREIGN KEY (collection_id) REFERENCES users_projects_collections(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."users_projects_collections_items" validate constraint "users_projects_collections_items_collection_id_fkey";

alter table "public"."users_projects_collections_items" add constraint "users_projects_collections_items_collection_id_project_id_key" UNIQUE using index "users_projects_collections_items_collection_id_project_id_key";

alter table "public"."users_projects_collections_items" add constraint "users_projects_collections_items_created_by_id_fkey" FOREIGN KEY (created_by_id) REFERENCES users_profiles(user_id) ON DELETE CASCADE not valid;

alter table "public"."users_projects_collections_items" validate constraint "users_projects_collections_items_created_by_id_fkey";

alter table "public"."users_projects_collections_items" add constraint "users_projects_collections_items_project_id_fkey" FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE ON UPDATE CASCADE not valid;

alter table "public"."users_projects_collections_items" validate constraint "users_projects_collections_items_project_id_fkey";

alter table "public"."users_projects_collections_items" add constraint "users_projects_collections_items_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."users_projects_collections_items" validate constraint "users_projects_collections_items_updated_by_id_fkey";

alter table "public"."users_projects_likes" add constraint "users_projects_likes_project_id_fkey" FOREIGN KEY (project_id) REFERENCES projects(id) ON UPDATE CASCADE not valid;

alter table "public"."users_projects_likes" validate constraint "users_projects_likes_project_id_fkey";

alter table "public"."users_projects_likes" add constraint "users_projects_likes_project_id_user_id_key" UNIQUE using index "users_projects_likes_project_id_user_id_key";

alter table "public"."users_projects_likes" add constraint "users_projects_likes_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users_profiles(user_id) not valid;

alter table "public"."users_projects_likes" validate constraint "users_projects_likes_user_id_fkey";

alter table "public"."users_projects_likes" add constraint "users_projects_likes_user_id_project_id_key" UNIQUE using index "users_projects_likes_user_id_project_id_key";

alter table "public"."users_roles" add constraint "users_roles_updated_by_id_fkey" FOREIGN KEY (updated_by_id) REFERENCES users_profiles(user_id) ON DELETE SET DEFAULT not valid;

alter table "public"."users_roles" validate constraint "users_roles_updated_by_id_fkey";

alter table "public"."users_roles" add constraint "users_roles_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users_profiles(user_id) ON DELETE CASCADE not valid;

alter table "public"."users_roles" validate constraint "users_roles_user_id_fkey";

alter table "public"."users_roles" add constraint "users_roles_user_id_key" UNIQUE using index "users_roles_user_id_key";


create policy "Anyone can select project type"
on "public"."project_category"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."project_event_type_subevent_type"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."project_event_type"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."project_exemplarity_indicator"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."project_exemplarity_indicator_category"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."project_implantation_mode"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."project_material_origin"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."project_material_type"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."project_material_use"
as permissive
for select
to public
using (true);


create policy "Anyone can select project site ownership"
on "public"."project_site_ownership"
as permissive
for select
to public
using (true);


create policy "Anyone can select project site usage"
on "public"."project_site_usage"
as permissive
for select
to public
using (true);


create policy "Anyone can select project site usage category"
on "public"."project_site_usage_category"
as permissive
for select
to public
using (true);


create policy "Anyone can select links between usages and categories"
on "public"."project_site_usage_site_usage_category"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."project_type"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."project_type_category"
as permissive
for select
to public
using (true);


create policy "Only admins and project creators can delete a project."
on "public"."projects"
as permissive
for delete
to public
using (((auth.uid() = created_by_id) OR user_has_role(VARIADIC ARRAY['admin'::user_role])));


create policy "Only admins, projects creators and adequately granted users can"
on "public"."projects"
as permissive
for update
to public
using ((user_has_role(VARIADIC ARRAY['admin'::user_role]) OR (auth.uid() = created_by_id) OR (EXISTS ( SELECT 1
   FROM projects_users
  WHERE ((projects_users.project_id = projects.id) AND (projects_users.user_id = auth.uid()) AND (projects_users.granted_role = ANY (ARRAY['admin'::user_role, 'editor'::user_role])))))))
with check ((user_has_role(VARIADIC ARRAY['admin'::user_role]) OR (auth.uid() = created_by_id) OR (EXISTS ( SELECT 1
   FROM projects_users
  WHERE ((projects_users.project_id = projects.id) AND (projects_users.user_id = auth.uid()) AND (projects_users.granted_role = ANY (ARRAY['admin'::user_role, 'editor'::user_role])))))));


create policy "Only authed users can insert projects."
on "public"."projects"
as permissive
for insert
to authenticated
with check (true);


create policy "Select published projects, owned projects, or granted projects."
on "public"."projects"
as permissive
for select
to public
using (((EXISTS ( SELECT 1
   FROM projects_publication_status
  WHERE (projects_publication_status.project_id = projects.id))) OR (auth.uid() = created_by_id) OR (EXISTS ( SELECT 1
   FROM projects_users
  WHERE ((projects_users.project_id = projects.id) AND (projects_users.user_id = auth.uid()))))));


create policy "Can only be read by thos who can read the host project"
on "public"."projects_events"
as permissive
for select
to public
using ((EXISTS ( SELECT 1
   FROM projects
  WHERE (projects.id = projects_events.project_id))));


create policy "Can only be read by thos who can read the host project"
on "public"."projects_events_ressources"
as permissive
for select
to public
using ((EXISTS ( SELECT 1
   FROM projects
  WHERE (projects.id = projects_events_ressources.id))));


create policy "Can only be read by those who can read the host project"
on "public"."projects_exemplarity_indicators"
as permissive
for select
to public
using ((EXISTS ( SELECT 1
   FROM projects
  WHERE (projects.id = projects_exemplarity_indicators.project_id))));


create policy "Enable read access for all users"
on "public"."projects_likes_sums"
as permissive
for select
to public
using (true);


create policy "Can only be read by those who can read the host project"
on "public"."projects_materials"
as permissive
for select
to public
using ((EXISTS ( SELECT 1
   FROM projects
  WHERE (projects.id = projects_materials.project_id))));


create policy "Can only be read by those who can read the host project"
on "public"."projects_materials_uses"
as permissive
for select
to public
using ((EXISTS ( SELECT 1
   FROM projects
  WHERE (projects.id = projects_materials_uses.project_id))));


create policy "Can only be read by those who can read the host project"
on "public"."projects_programs"
as permissive
for select
to public
using ((EXISTS ( SELECT 1
   FROM projects
  WHERE (projects.id = projects_programs.project_id))));


create policy "Anyone can select publication status."
on "public"."projects_publication_status"
as permissive
for select
to public
using (true);


create policy "Only valid users can update status and publish minimally comple"
on "public"."projects_publication_status"
as permissive
for update
to public
using ((user_has_role(VARIADIC ARRAY['admin'::user_role]) OR (user_has_role(VARIADIC ARRAY['editor'::user_role]) AND ((EXISTS ( SELECT 1
   FROM projects
  WHERE ((projects.id = projects_publication_status.project_id) AND (projects.created_by_id = auth.uid())))) OR (EXISTS ( SELECT 1
   FROM projects_users
  WHERE ((projects_users.project_id = projects_users.project_id) AND (projects_users.user_id = auth.uid()) AND (projects_users.granted_role = ANY (ARRAY['admin'::user_role, 'editor'::user_role])))))))));


create policy "Anyone can select project users."
on "public"."projects_users"
as permissive
for select
to public
using (true);


create policy "Only project creators, admins can insert, update, and delete pr"
on "public"."projects_users"
as permissive
for all
to public
using ((user_has_role(VARIADIC ARRAY['admin'::user_role]) OR (EXISTS ( SELECT 1
   FROM projects
  WHERE ((projects.id = projects_users.project_id) AND (projects.created_by_id = auth.uid()))))));


create policy "Anyone can select user profiles."
on "public"."users_profiles"
as permissive
for select
to public
using (true);


create policy "Users can only update their own profile."
on "public"."users_profiles"
as permissive
for update
to public
using ((auth.uid() = user_id))
with check ((auth.uid() = user_id));


create policy "Anyone can select published collections or collections they own"
on "public"."users_projects_collections"
as permissive
for select
to public
using ((is_public OR (auth.uid() = created_by_id)));


create policy "Authed users can only manage collections under their uid"
on "public"."users_projects_collections"
as permissive
for all
to authenticated
using ((auth.uid() = created_by_id))
with check ((auth.uid() = created_by_id));


create policy "Anyone can select items for collections and projects they can s"
on "public"."users_projects_collections_items"
as permissive
for select
to public
using (((EXISTS ( SELECT 1
   FROM users_projects_collections
  WHERE (users_projects_collections.id = users_projects_collections_items.collection_id))) AND (EXISTS ( SELECT 1
   FROM projects
  WHERE (projects.id = users_projects_collections_items.project_id)))));


create policy "Authed users can only manage items of existing collections they"
on "public"."users_projects_collections_items"
as permissive
for all
to public
using (((auth.uid() = created_by_id) AND (EXISTS ( SELECT 1
   FROM users_projects_collections
  WHERE ((users_projects_collections.id = users_projects_collections_items.collection_id) AND (users_projects_collections.created_by_id = auth.uid()))))))
with check (((auth.uid() = created_by_id) AND (EXISTS ( SELECT 1
   FROM users_projects_collections
  WHERE ((users_projects_collections.id = users_projects_collections_items.collection_id) AND (users_projects_collections.created_by_id = auth.uid()))))));


create policy "Anyone can see projects likes for projects they can select"
on "public"."users_projects_likes"
as permissive
for select
to public
using ((EXISTS ( SELECT 1
   FROM projects
  WHERE (projects.id = users_projects_likes.project_id))));


create policy "Authenticated users can only manage their own likes"
on "public"."users_projects_likes"
as permissive
for all
to public
using (((auth.uid() = user_id) AND (EXISTS ( SELECT 1
   FROM projects
  WHERE (projects.id = users_projects_likes.project_id)))))
with check (((auth.uid() = user_id) AND (EXISTS ( SELECT 1
   FROM projects
  WHERE (projects.id = users_projects_likes.project_id)))));


create policy "Anyone can select users roles."
on "public"."users_roles"
as permissive
for select
to public
using (true);


create policy "Only admins can update users roles."
on "public"."users_roles"
as permissive
for update
to public
using (user_has_role(VARIADIC ARRAY['admin'::user_role]))
with check (user_has_role(VARIADIC ARRAY['admin'::user_role]));


CREATE TRIGGER on_new_project AFTER INSERT ON public.projects FOR EACH ROW EXECUTE FUNCTION handle_new_project();

CREATE TRIGGER on_project_like AFTER INSERT ON public.users_projects_likes FOR EACH ROW EXECUTE FUNCTION handle_project_like();

CREATE TRIGGER on_project_unlike AFTER DELETE ON public.users_projects_likes FOR EACH ROW EXECUTE FUNCTION handle_project_unlike();

CREATE TRIGGER on_user_role_delete AFTER DELETE ON public.users_roles FOR EACH ROW EXECUTE FUNCTION check_enforce_nplex_user();

CREATE TRIGGER on_user_role_update AFTER UPDATE ON public.users_roles FOR EACH ROW EXECUTE FUNCTION check_enforce_nplex_user();

CREATE TRIGGER track_project_event_type_subevent_type_update BEFORE UPDATE ON public.project_event_type_subevent_type FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER track_event_type_update BEFORE UPDATE ON public.project_event_type FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER track_project_exemplarity_indicator_update BEFORE UPDATE ON public.project_exemplarity_indicator FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER track_project_exemplarity_indicator_category_update BEFORE UPDATE ON public.project_exemplarity_indicator_category FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER track_project_material_type_update BEFORE UPDATE ON public.project_material_type FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER track_project_material_use_update BEFORE UPDATE ON public.project_material_use FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER track_project_site_usage_update BEFORE UPDATE ON public.project_site_usage FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER track_project_site_usage_site_usage_category_update BEFORE UPDATE ON public.project_site_usage_site_usage_category FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER track_project_type_update BEFORE UPDATE ON public.project_type FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER track_project_type_category_update BEFORE UPDATE ON public.project_type_category FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER on_project_update BEFORE UPDATE ON public.projects FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER on_project_event_update BEFORE UPDATE ON public.projects_events FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER on_project_ressource_update BEFORE UPDATE ON public.projects_events_ressources FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER on_project_exemplarity_indicator_update BEFORE UPDATE ON public.projects_exemplarity_indicators FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER on_project_material_update BEFORE UPDATE ON public.projects_materials FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER on_project_material_use_update BEFORE UPDATE ON public.projects_materials_uses FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER on_project_program_update BEFORE UPDATE ON public.projects_programs FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER on_project_publication_status_update BEFORE UPDATE ON public.projects_publication_status FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER on_project_user_update BEFORE UPDATE ON public.projects_users FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER on_user_update BEFORE UPDATE ON public.users_profiles FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER on_user_project_collection_update BEFORE UPDATE ON public.users_projects_collections FOR EACH ROW EXECUTE FUNCTION track_update();

CREATE TRIGGER on_user_project_collection_item_update BEFORE UPDATE ON public.users_projects_collections_items FOR EACH ROW EXECUTE FUNCTION track_update();


