create table "public"."actor_organisation_role" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "title" text not null,
    "description" text,
    "short_title" text,
    "updated_at" timestamp with time zone not null default now()
);


alter table "public"."actor_organisation_role" enable row level security;

create table "public"."organisation_type" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "title" text,
    "description" text
);


alter table "public"."organisation_type" enable row level security;

create table "public"."organisations_actors" (
    "actor" uuid not null,
    "organisation" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "created_by" uuid not null default default_uid(),
    "updated_by" uuid not null default default_uid(),
    "role" bigint
);


alter table "public"."organisations_actors" enable row level security;

alter table "public"."organisations" add column "type" bigint;

CREATE UNIQUE INDEX actor_role_pkey ON public.actor_organisation_role USING btree (id);

CREATE UNIQUE INDEX organisation_type_pkey ON public.organisation_type USING btree (id);

CREATE UNIQUE INDEX organisations_actors_pkey ON public.organisations_actors USING btree (actor, organisation);

alter table "public"."actor_organisation_role" add constraint "actor_role_pkey" PRIMARY KEY using index "actor_role_pkey";

alter table "public"."organisation_type" add constraint "organisation_type_pkey" PRIMARY KEY using index "organisation_type_pkey";

alter table "public"."organisations_actors" add constraint "organisations_actors_pkey" PRIMARY KEY using index "organisations_actors_pkey";

alter table "public"."organisations" add constraint "organisations_type_fkey" FOREIGN KEY (type) REFERENCES organisation_type(id) ON DELETE SET NULL not valid;

alter table "public"."organisations" validate constraint "organisations_type_fkey";

alter table "public"."organisations_actors" add constraint "organisations_actors_actor_fkey" FOREIGN KEY (actor) REFERENCES actors(id) ON DELETE CASCADE not valid;

alter table "public"."organisations_actors" validate constraint "organisations_actors_actor_fkey";

alter table "public"."organisations_actors" add constraint "organisations_actors_created_by_fkey" FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE SET DEFAULT not valid;

alter table "public"."organisations_actors" validate constraint "organisations_actors_created_by_fkey";

alter table "public"."organisations_actors" add constraint "organisations_actors_organisation_fkey" FOREIGN KEY (organisation) REFERENCES organisations(id) ON DELETE CASCADE not valid;

alter table "public"."organisations_actors" validate constraint "organisations_actors_organisation_fkey";

alter table "public"."organisations_actors" add constraint "organisations_actors_role_fkey" FOREIGN KEY (role) REFERENCES actor_organisation_role(id) ON DELETE SET NULL not valid;

alter table "public"."organisations_actors" validate constraint "organisations_actors_role_fkey";

alter table "public"."organisations_actors" add constraint "organisations_actors_updated_by_fkey" FOREIGN KEY (updated_by) REFERENCES users(id) ON DELETE SET DEFAULT not valid;

alter table "public"."organisations_actors" validate constraint "organisations_actors_updated_by_fkey";

create policy "Anyone can select organisation types"
on "public"."organisation_type"
as permissive
for select
to public
using (true);



