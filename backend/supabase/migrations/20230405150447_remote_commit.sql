alter table "public"."organisations_actors" drop constraint "organisations_actors_role_fkey";

drop view if exists "public"."editable_actors";

drop view if exists "public"."projects_publication_status_fulfill";

alter table "public"."actor_organisation_role" drop constraint "actor_role_pkey";

alter table "public"."organisations_actors" drop constraint "organisations_actors_pkey";

drop index if exists "public"."actor_role_pkey";

drop index if exists "public"."organisations_actors_pkey";

drop table "public"."actor_organisation_role";

create table "public"."actor_duty" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "title" text not null,
    "description" text,
    "updated_at" timestamp with time zone not null default now(),
    "skill_title" text not null,
    "skill_label" text not null,
    "short_title" text
);


alter table "public"."actor_duty" enable row level security;

create table "public"."organisations_actors_duty" (
    "id" uuid not null,
    "created_at" timestamp with time zone default now(),
    "duty" bigint not null
);


alter table "public"."organisations_actors_duty" enable row level security;

create table "public"."projects_actors" (
    "project" uuid not null,
    "created_at" timestamp with time zone default now(),
    "actor" uuid not null,
    "duty" bigint,
    "organisation" uuid
);


alter table "public"."projects_actors" enable row level security;

create table "public"."projects_organisations" (
    "project" uuid not null,
    "created_at" timestamp with time zone default now(),
    "organisation" uuid not null
);


alter table "public"."projects_organisations" enable row level security;

alter table "public"."actors" alter column "id" set default uuid_generate_v4();

alter table "public"."actors_users" drop column "role";

alter table "public"."actors_users" add column "updated_at" timestamp with time zone not null default now();

alter table "public"."organisations_actors" drop column "role";

alter table "public"."organisations_actors" add column "end" date;

alter table "public"."organisations_actors" add column "id" uuid not null default uuid_generate_v4();

alter table "public"."organisations_actors" add column "start" date not null;

alter table "public"."projects_images_credits" alter column "first_name" drop not null;

alter table "public"."projects_location" alter column "center" set data type geometry using "center"::geometry;

alter table "public"."projects_location" alter column "circle" set data type geometry using "circle"::geometry;

CREATE UNIQUE INDEX organisations_users_roles_pkey ON public.organisations_actors_duty USING btree (id, duty);

CREATE UNIQUE INDEX projects_actors_pkey ON public.projects_actors USING btree (project, actor);

CREATE UNIQUE INDEX projects_organisations_pkey ON public.projects_organisations USING btree (project, organisation);

CREATE UNIQUE INDEX actor_role_pkey ON public.actor_duty USING btree (id);

CREATE UNIQUE INDEX organisations_actors_pkey ON public.organisations_actors USING btree (id);

alter table "public"."actor_duty" add constraint "actor_role_pkey" PRIMARY KEY using index "actor_role_pkey";

alter table "public"."organisations_actors_duty" add constraint "organisations_users_roles_pkey" PRIMARY KEY using index "organisations_users_roles_pkey";

alter table "public"."projects_actors" add constraint "projects_actors_pkey" PRIMARY KEY using index "projects_actors_pkey";

alter table "public"."projects_organisations" add constraint "projects_organisations_pkey" PRIMARY KEY using index "projects_organisations_pkey";

alter table "public"."organisations_actors" add constraint "organisations_actors_pkey" PRIMARY KEY using index "organisations_actors_pkey";

alter table "public"."organisations_actors_duty" add constraint "organisations_actors_duty_duty_fkey" FOREIGN KEY (duty) REFERENCES actor_duty(id) ON DELETE CASCADE not valid;

alter table "public"."organisations_actors_duty" validate constraint "organisations_actors_duty_duty_fkey";

alter table "public"."organisations_actors_duty" add constraint "organisations_actors_duty_id_fkey" FOREIGN KEY (id) REFERENCES organisations_actors(id) ON DELETE CASCADE not valid;

alter table "public"."organisations_actors_duty" validate constraint "organisations_actors_duty_id_fkey";

alter table "public"."projects_actors" add constraint "projects_actors_actor_fkey" FOREIGN KEY (actor) REFERENCES actors(id) ON DELETE CASCADE not valid;

alter table "public"."projects_actors" validate constraint "projects_actors_actor_fkey";

alter table "public"."projects_actors" add constraint "projects_actors_duty_fkey" FOREIGN KEY (duty) REFERENCES actor_duty(id) ON DELETE SET NULL not valid;

alter table "public"."projects_actors" validate constraint "projects_actors_duty_fkey";

alter table "public"."projects_actors" add constraint "projects_actors_organisation_fkey" FOREIGN KEY (organisation) REFERENCES organisations(id) ON DELETE SET NULL not valid;

alter table "public"."projects_actors" validate constraint "projects_actors_organisation_fkey";

alter table "public"."projects_actors" add constraint "projects_actors_project_fkey" FOREIGN KEY (project) REFERENCES projects(id) ON DELETE CASCADE not valid;

alter table "public"."projects_actors" validate constraint "projects_actors_project_fkey";

alter table "public"."projects_organisations" add constraint "projects_organisations_organisation_fkey" FOREIGN KEY (organisation) REFERENCES organisations(id) ON DELETE CASCADE not valid;

alter table "public"."projects_organisations" validate constraint "projects_organisations_organisation_fkey";

alter table "public"."projects_organisations" add constraint "projects_organisations_project_fkey" FOREIGN KEY (project) REFERENCES projects(id) ON DELETE CASCADE not valid;

alter table "public"."projects_organisations" validate constraint "projects_organisations_project_fkey";

create or replace view "public"."editable_actors" as  SELECT a.id,
    a.created_at,
    a.updated_at,
    a.created_by,
    a.updated_by,
    a.first_name,
    a.last_name,
    a.middle_name,
    a.about
   FROM actors a
  WHERE authorize_actor_update(a.*);


create or replace view "public"."projects_publication_status_fulfill" as  SELECT ps.project,
    ps.updated_at,
    ps.updated_by,
    ps.published,
    ps.requested,
        CASE
            WHEN ((pl.circle IS NOT NULL) AND (p.title IS NOT NULL) AND (p.type IS NOT NULL)) THEN true
            ELSE false
        END AS fulfill
   FROM ((projects_publication_status ps
     LEFT JOIN projects_location pl ON ((pl.project = ps.project)))
     LEFT JOIN projects p ON ((p.id = ps.project)));



alter table "storage"."objects" add column "version" text;


